<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="97de9ca8-039d-4ae5-84a8-a16c6ada5ed3" activeEnvironment="Default environment" name="Automatizacion_Servicios_Ecommerce" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" encryptionMode="Not encrypted" updated="2.8.2 2019-08-27T17:04:01Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="3e4f90c6-a8cf-4080-8fb2-9398fb9ee9ee" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-01" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://des.restgeneral.esb.porvenir.com:443</con:endpoint></con:endpoints><con:resource name="Afiliados" path="/wsConsultaViabilidadAfiliacionWeb/obligatorias/v1/RegistroAfiliados/Clientes/Afiliados" id="6352248a-65ef-4abd-9720-7a134c05b02f"><con:settings/><con:parameters><con:parameter><con:name>tipoDocumento</con:name><con:value>CC</con:value><con:style>QUERY</con:style><con:default>CC</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>numeroDocumento</con:name><con:value>1049633371</con:value><con:style>QUERY</con:style><con:default>1049633371</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>certifica</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Afiliados 1" id="b3314061-e714-4d7d-9d95-a0550511b1fd" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:afil="https://des.restgeneral.esb.porvenir.com/wsConsultaViabilidadAfiliacionWeb/obligatorias/v1/RegistroAfiliados/Clientes/Afiliados">afil:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:afil="https://des.restgeneral.esb.porvenir.com/wsConsultaViabilidadAfiliacionWeb/obligatorias/v1/RegistroAfiliados/Clientes/Afiliados">afil:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="2325822b-cceb-4066-b9bd-96f4726c6a4b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://des.restgeneral.esb.porvenir.com:443</con:endpoint><con:request/><con:originalUri>https://des.restgeneral.esb.porvenir.com/wsConsultaViabilidadAfiliacionWeb/obligatorias/v1/RegistroAfiliados/Clientes/Afiliados</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tipoDocumento" value="CC"/>
  <con:entry key="serviceTransaction" value="AAF04S03V01"/>
  <con:entry key="headerRq" value="AAF04S03V01"/>
  <con:entry key="certifica" value="false"/>
  <con:entry key="serviceID" value="AAF04S03V01"/>
</con:parameters><con:parameterOrder><con:entry>tipoDocumento</con:entry><con:entry>numeroDocumento</con:entry><con:entry>certifica</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="78f0a470-972c-481e-8572-990f32427eb2" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-02" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Empleadores" path="/wsValidaListaRestrictivaWeb/crm/v1/clientes/empleadores" id="379408fd-8260-4539-a774-19f519ec7e21"><con:settings/><con:parameters><con:parameter><con:name>pTipoDocumento</con:name><con:value>CC</con:value><con:style>QUERY</con:style><con:default>CC</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>pNumeroDocumento</con:name><con:value>80242138</con:value><con:style>QUERY</con:style><con:default>80242138</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Empleadores 1" id="2f488311-de84-46ba-88ed-b72aec9b6ab9" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:emp="https://prb.restgeneral.esb.porvenir.com/wsValidaListaRestrictivaWeb/crm/v1/clientes/empleadores">emp:Response</con:element></con:representation><con:request name="Request 1" id="255ae3ef-9500-4caf-b3c5-da2138c685a4" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsValidaListaRestrictivaWeb/crm/v1/clientes/empleadores</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AEM01S01V01"/>
  <con:entry key="pTipoDocumento" value="CC"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="pNumeroDocumento" value="80242138"/>
</con:parameters><con:parameterOrder><con:entry>pTipoDocumento</con:entry><con:entry>pNumeroDocumento</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="785c4bbc-ea3d-47fc-bc5b-99e27d596219" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-03" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Afiliados" path="/wsValidaAfiliacionEnProcesoWeb/obligatorias/v1/Clientes/Afiliados" id="0e77a03b-0dbf-49de-b8f5-0c7a774119a4"><con:settings/><con:parameters><con:parameter><con:name>tipoDocumento</con:name><con:value>CC</con:value><con:style>QUERY</con:style><con:default>CC</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>numeroDocumento</con:name><con:value>79446638</con:value><con:style>QUERY</con:style><con:default>79446638</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Afiliados 1" id="c8e88171-ec82-4ad1-99d8-6da5774497c4" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:afil="https://prb.obligatorias.centrodeservicios.porvenir.com/wsValidaAfiliacionEnProcesoWeb/obligatorias/v1/Clientes/Afiliados">afil:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="0eb634b9-8280-4d76-8e00-d08a7d2ad45f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsValidaAfiliacionEnProcesoWeb/obligatorias/v1/Clientes/Afiliados</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S01V01"/>
  <con:entry key="headerRq" value="AAF04S01V01"/>
  <con:entry key="numeroDocumento" value="79446638"/>
  <con:entry key="serviceID" value="AAF04S01V01"/>
</con:parameters><con:parameterOrder><con:entry>tipoDocumento</con:entry><con:entry>numeroDocumento</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="ebbc9807-9ffe-4514-b576-0f6d4659e87f" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-06" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarAfiliacionProspecto/AAF04S07V01/v1/Consultar" id="03644f50-7d23-471f-996b-3a3ae3cd6c42"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>4</con:value><con:style>QUERY</con:style><con:default>4</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="4a10df66-61db-4d7b-8090-f3567b90977e" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarAfiliacionProspecto/AAF04S07V01/v1/Consultar">con1:Response</con:element></con:representation><con:request name="Request 1" id="0157784a-be87-44f5-bf45-3167411e382e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarAfiliacionProspecto/AAF04S07V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S07V01"/>
  <con:entry key="solicitudId" value="145"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6203c66a-19a1-40fa-95e6-9f3efc858bf9" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-04" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Registrar" path="/wsRegistrarAfiliacionProspecto/AAF04S04V01/v1/Registrar" id="b91baebf-5cd8-4f91-bfb4-1b5729d65723"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value>PRUEBA</con:value><con:style>QUERY</con:style><con:default>PRUEBA</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Registrar 1" id="12e20cc6-9605-41eb-8f4d-3121c8203ae0" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarAfiliacionProspecto/AAF04S04V01/v1/Registrar">reg:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="1099c8d1-d7ff-4cd5-b5d3-2e1fd47810fc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{"solicitudId": 0,
"usuario": "PRUEBA 1",
"password": "passwd",
"tipoIdSolicitante": "CC",
"numeroIdSolicitante": "1014267126",
"fechaSolicitud": "2019-07-02",
"estadoSolicitud": "ACTIVO",
"esPep": "S",
"habeasData": "S",
"autorizaCentrales": "S",
"tipoVinculacionId": "VINCULACION INICIAL"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarAfiliacionProspecto/AAF04S04V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S04V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>userId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="43192fc2-0327-4a8c-be00-50a5eafcd856" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-05" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Actualizar" path="/wsActualizarAfiliacionProspecto/AAF04S05V01/v1/Actualizar" id="98811e15-0a41-4f45-beb4-1ee3583f93e3"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value>por08016</con:value><con:style>QUERY</con:style><con:default>por08016</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Actualizar 1" id="edea8237-1ec9-4593-b979-5db8e70f3f1b" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:act="https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarAfiliacionProspecto/AAF04S05V01/v1/Actualizar">act:Response</con:element></con:representation><con:request name="Request 1" id="de5aa049-754b-4e67-9663-de07967f16f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "solicitudId": 145,
  "password": "passwd",
  "tipoIdSolicitante": "CC",
  "numeroIdSolicitante": 1014267126,
  "estadoSolicitud": "ACTIVO",
  "esPep": "N",
  "habeasData": "N",
  "autorizaCentrales": "N",
  "estado": "ACTIVO",
  "tipoVinculacionId": "VINCULACION INICIAL"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarAfiliacionProspecto/AAF04S05V01/v1/Actualizar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S05V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>userId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="4f56c9d8-3ad3-46b9-b651-8bdef08a4823" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-07" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarAfiliacionProspecto/AAF04S06V01/v1/Consultar" id="66f023d5-7555-4a32-bc93-907872e71f50"><con:settings/><con:parameters><con:parameter><con:name>tipoIdSolicitante</con:name><con:value>CC</con:value><con:style>QUERY</con:style><con:default>CC</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>numeroIdSolicitante</con:name><con:value>1014267127</con:value><con:style>QUERY</con:style><con:default>1014267127</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="a617b994-7171-4c01-9d8a-80a1ec348cd0" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarAfiliacionProspecto/AAF04S06V01/v1/Consultar">con1:Response</con:element></con:representation><con:request name="Request 1" id="86a34a84-9f88-4e32-9c9e-49612f24f738" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarAfiliacionProspecto/AAF04S06V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tipoIdSolicitante" value="CC"/>
  <con:entry key="serviceTransaction" value="AAF04S06V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userID" value="test"/>
  <con:entry key="numeroIdSolicitante" value="1014267127"/>
</con:parameters><con:parameterOrder><con:entry>tipoIdSolicitante</con:entry><con:entry>numeroIdSolicitante</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="e6ec4a59-1822-4208-81a6-9db7701af944" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-08" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Registrar" path="/wsRegistrarDatosBasicosProspecto/AAF04S08V01/v1/Registrar" id="d9b5f6a6-1ce6-449e-b887-d677ed6e7980"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Registrar 1" id="2afb7cc5-3221-400a-91d3-dbea49fcd196" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosBasicosProspecto/AAF04S08V01/v1/Registrar">reg:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="40449e35-68e1-4944-b49f-9dc4a9767818" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
	"solicitudId": 311,
	"codigoCiudadExpDoc": "11002",
	"fechaExpDoc": "19940424",
	"fechaNacimiento": "19750424",
	"genero": "F",
	"primerApellido": "Agababa",
	"segundoApellido": "Mozquera",
	"primerNombre": "Gsdfasaf",
	"segundoNombre": "Kiko"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosBasicosProspecto/AAF04S08V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S08V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal;userID=PO"/>
  <con:entry key="serviceID" value="AAF04S08V01"/>
  <con:entry key="userId" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="4753db1b-3093-4778-ac84-06cc8d7e0623" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-09" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="ActualizarDatos" path="/wsActualizarDatosBasicosProspecto/AAF04S09V01/v1/ActualizarDatos/" id="e9bd227b-fe75-474c-a4a4-a7e332c272bb"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ActualizarDatos 1" id="f8a64fe0-4ab3-4c81-a95e-aae6bda04d29" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:act="https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosBasicosProspecto/AAF04S09V01/v1/ActualizarDatos/">act:Response</con:element></con:representation><con:request name="Request 1" id="435423d7-5cab-44d0-a887-0606684d1c39" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "datosBasicosId": 165,
  "solicitudId": 150,
  "estado": "INACTIVO"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosBasicosProspecto/AAF04S09V01/v1/ActualizarDatos/</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S09V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceId" value="AAF04S09V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceId</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="f1b5d650-20cf-4bf2-bb2d-efb6b5d82216" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-10" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarDatosBasicosProspecto/AAF04S10V01/v1/Consultar" id="6ddb1796-c230-42f0-bd3e-fadc96156187"><con:settings/><con:parameters><con:parameter><con:name>datosBasicosId</con:name><con:value>99</con:value><con:style>QUERY</con:style><con:default>99</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="a1ede641-42f5-4d91-b77b-9a8d5bc14340" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosBasicosProspecto/AAF04S10V01/v1/Consultar">con1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosBasicosProspecto/AAF04S10V01/v1/Consultar">con1:Fault</con:element></con:representation><con:request name="Request 1" id="8647e1ff-2139-49e4-9793-bb0644be2bd5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosBasicosProspecto/AAF04S10V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S10V01"/>
  <con:entry key="datosBasicosId" value="186"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal;userID=PO"/>
  <con:entry key="serviceID" value="AAF04S08V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>datosBasicosId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="bb3c9280-6ceb-4864-a9ba-8f0cefc99871" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-11" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarDatosBasicosProspectoIdSolicitud/AAF04S11V01/v1/Consultar" id="d7126483-51da-4aa6-baef-af876ec75bb4"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>150</con:value><con:style>QUERY</con:style><con:default>150</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="5139456e-9659-4233-aa2b-8eb050abb15f" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosBasicosProspectoIdSolicitud/AAF04S11V01/v1/Consultar">con1:Response</con:element></con:representation><con:request name="Request 1" id="433b1b00-f754-4f1c-8c47-9ec796ac35bb" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosBasicosProspectoIdSolicitud/AAF04S11V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S11V01"/>
  <con:entry key="solicitudId" value="151"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="278500fa-69cc-41af-988b-785c9db94f6f" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-12" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Registrar" path="/wsRegistrarBeneficiarioProspecto/AAF04S13V01/v1/Registrar" id="7029566a-52c0-443f-97a1-d311f6eb57bf"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Registrar 1" id="d5eebc44-bb24-410d-8c3b-bd2983353b0c" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarBeneficiarioProspecto/AAF04S13V01/v1/Registrar">reg:Response</con:element></con:representation><con:request name="Request 1" id="f693b016-d051-49dd-8d98-c1c60a6ac507" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "solicitudId": 151,
  "tipoIdBeneficiario": "T",
  "idBeneficiario": "888888",
  "fechaNacimiento": "20100101",
  "genero": "M",
  "primerApellido": "primerApellido",
  "segundoApellido": "segundoApellido",
  "primerNombre": "primeNombre",
  "segundoNombre": "segundoNombre",
  "codigoParentesco": "1",
  "telefono": "1111111"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarBeneficiarioProspecto/AAF04S13V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S13V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userId" value="por08016"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="70437976-36bf-46ac-964c-7348622365f5" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-13" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Actualizar" path="/wsActualizarBeneficiarioProspecto/AAF04S14V01/v1/Actualizar" id="8cceb918-5c17-4cc5-9ad9-d0a04b3a2b85"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Actualizar 1" id="39c88155-4b01-4b3c-9874-40b9218879f4" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:act="https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarBeneficiarioProspecto/AAF04S14V01/v1/Actualizar">act:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="86ff4af5-87b3-47d2-aa06-328ee54f6c2a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "beneficiarioId": 4,
  "tipoIdBeneficiario": "T",
  "idBeneficiario": 11111,
  "fechaNacimiento": "20190101",
  "genero": "M",
  "primerApellido": "Papellido",
  "segundoApellido": "Sapellido",
  "primerNombre": "pnombre",
  "segundoNombre": "snombre",
  "codigoParentesco": "2",
  "telefono": "88888",
  "estado": "INACTIVO"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarBeneficiarioProspecto/AAF04S14V01/v1/Actualizar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S14V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userId" value="test"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="fbc7aae5-93b0-4ac5-8bed-6d59d1a7918a" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-14" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarBeneficiarioProspectoPorLlave/AAF04S15V01/v1/Consultar" id="307e911f-de2f-4800-95e0-46599d5ba67f"><con:settings/><con:parameters><con:parameter><con:name>beneficiarioId</con:name><con:value>5</con:value><con:style>QUERY</con:style><con:default>5</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="7d64952a-225a-4b27-9b93-1a602aa602f9" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarBeneficiarioProspectoPorLlave/AAF04S15V01/v1/Consultar">con1:Response</con:element></con:representation><con:request name="Request 1" id="dccea336-97c8-4fa0-b076-87fbef8f2a36" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarBeneficiarioProspectoPorLlave/AAF04S15V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S15V01"/>
  <con:entry key="beneficiarioId" value="5"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userId" value="POR08016"/>
</con:parameters><con:parameterOrder><con:entry>beneficiarioId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="d714920b-5758-4c16-a8d8-7b3e69b383d8" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-15" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarBeneficiarioProspecto/AAF04S16V01/v1/Consultar" id="6e846699-206a-43aa-a432-8603c2e1f2d4"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>151</con:value><con:style>QUERY</con:style><con:default>151</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="37c01e4a-c5b9-4044-a2bc-088acfe37ef1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarBeneficiarioProspecto/AAF04S16V01/v1/Consultar">con1:Response</con:element></con:representation><con:request name="Request 1" id="f70db133-60d1-4f12-aff4-e5e73e574d49" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarBeneficiarioProspecto/AAF04S16V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S16V01"/>
  <con:entry key="solicitudId" value="151"/>
  <con:entry key="headerRq" value="AAF04S16V01"/>
  <con:entry key="serviceID" value="AAF04S16V01"/>
  <con:entry key="userId" value="TEST"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="5d887a71-fffe-4b5c-8dd7-a528cfb6245d" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-16" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="RegistrarDatos" path="/wsRegistrarDatosLaboralProspecto/AAF04S17V01/v1/RegistrarDatos" id="d115b49c-7d5d-4bc1-bf71-a838feba01f6"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="RegistrarDatos 1" id="5ebfc737-2446-4ddf-82c1-2fcd9ffad59f" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>405 500 400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosLaboralProspecto/AAF04S17V01/v1/RegistrarDatos">reg:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosLaboralProspecto/AAF04S17V01/v1/RegistrarDatos">reg:Fault</con:element></con:representation><con:request name="Request 1" id="063bde79-0dea-4417-aff0-5f26201697a3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "solicitudId": 145,
  "sucursalId": 1234567890232,
  "tipoIdEmpleador": "NIT",
  "idEmpleador": 860510431,
  "razonSocial": "ALVARO VELEZ Y CIA LTDA.",
  "codigoCiudadEmpleador": "11001",
  "correoElectronicoEmpleador": "prueba123@gmail.com",
  "direccionEmpleador": "CalleFalsa 1",
  "ocupacionCargoActual": "Miembros del Poder Ejecutivo y Legislativo",
  "tipoTrabajador": "Dependiente",
  "salario": 123456789
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosLaboralProspecto/AAF04S17V01/v1/RegistrarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S17V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S17V01"/>
  <con:entry key="userID" value="por07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="7f4e51d1-9410-49b2-8171-8c47715636aa" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-17" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="ActualizarDatos" path="/wsActualizarDatosLaboralProspecto/AAF04S18V01/v1/ActualizarDatos" id="49d52037-c75c-40cf-8d19-32a2c176481d"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ActualizarDatos 1" id="1fd7ab93-28fe-4e07-a7a2-cba9dac02199" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:act="https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosLaboralProspecto/AAF04S18V01/v1/ActualizarDatos">act:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="f2b43877-c8f1-49a6-9989-9a581befb8ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "datosLaboralesId": 8,
  "solicitudId": 62,
  "sucursalId": 1,
  "tipoIdEmpleador": "NIT",
  "idEmpleador": 20036,
  "razonSocial": "LA MERIENDA S.A.S",
  "codigoCiudadEmpleador": "10001",
  "correoElectronicoEmpleador": "admin@merisas.com",
  "direccionEmpleador": "CALLE 68J BIS 36 - 12",
  "ocupacionCargoActual": "CEO",
  "tipoTrabajador": "DEPENDIENTE",
  "salario": 230000,
  "estado": "INACTIVO"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosLaboralProspecto/AAF04S18V01/v1/ActualizarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S18V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal;userID=PO"/>
  <con:entry key="serviceID" value="AAF04S18V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="265b8b50-1b7d-437f-9bff-673054f025a3" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-18" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="ConsultarDatos" path="/wsConsultarDatosLaboralProspectoPorLlave/AAF04S19V01/v1/ConsultarDatos" id="96aec9a6-fee9-4e01-9c28-8b6da7cfcf4f"><con:settings/><con:parameters><con:parameter><con:name>datosLaboralesId</con:name><con:value>15</con:value><con:style>QUERY</con:style><con:default>15</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ConsultarDatos 1" id="43c8cc00-ab6c-4387-9aab-f7457ed6c563" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosLaboralProspectoPorLlave/AAF04S19V01/v1/ConsultarDatos">con1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosLaboralProspectoPorLlave/AAF04S19V01/v1/ConsultarDatos">con1:Fault</con:element></con:representation><con:request name="Request 1" id="5c45e29b-b263-41b9-886f-b68021503b94" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosLaboralProspectoPorLlave/AAF04S19V01/v1/ConsultarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S19V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S19V01"/>
  <con:entry key="userID" value="POR07645"/>
  <con:entry key="datosLaboralesId" value="15"/>
</con:parameters><con:parameterOrder><con:entry>datosLaboralesId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="55aa10ad-ef3a-4005-bfdb-4963954a7e2d" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-19" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint></con:endpoints><con:resource name="ConsultarDatos" path="/wsConsultarDatosLaboralProspecto/AAF04S20V01/v1/ConsultarDatos" id="badc72f1-64a4-4b34-b3ea-f48cb95d6c09"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>150</con:value><con:style>QUERY</con:style><con:default>150</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ConsultarDatos 1" id="f599e065-dee4-4e20-be1e-8cc046ecbcb6" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosLaboralProspecto/AAF04S20V01/v1/ConsultarDatos">con1:Response</con:element></con:representation><con:request name="Request 1" id="1f9b5443-3078-4799-b272-b483c7be8a60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosLaboralProspecto/AAF04S20V01/v1/ConsultarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S20V01"/>
  <con:entry key="solicitudId" value="158"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S20V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="a540a3c2-e666-4e3b-8fc6-bcab11e6aaa5" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-20" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Registrar" path="/wsRegistrarDatosPeps/AAF04S21V01/v1/Registrar" id="974decbd-08e1-443d-96d8-32f066887186"><con:settings/><con:parameters><con:parameter><con:name>serviceTransaction</con:name><con:value>AAF04S21V01</con:value><con:style>HEADER</con:style><con:default>AAF04S21V01</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Registrar 1" id="5a68b8ae-e854-419b-847f-83f9c6333022" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosPeps/AAF04S21V01/v1/Registrar">reg:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosPeps/AAF04S21V01/v1/Registrar">reg:Fault</con:element></con:representation><con:request name="Request 1" id="582a680d-2799-4b9d-8142-83e4fb2b05bf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{"solicitudId": "163",
"codigoCiiu": "060",
"esReconocidoPub": "S",
"manejaFondosPub": "N"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosPeps/AAF04S21V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S21V01"/>
  <con:entry key="userId" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>serviceTransaction</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="1ce42c4e-9092-4cff-b139-1d1230ea1650" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-21" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Actualizar" path="/wsActualizarDatosPeps/AAF04S22V01/v1/Actualizar" id="5c1cc17c-b353-47a8-93b9-2118e4a48283"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Actualizar 1" id="8a624a33-842b-4679-bf77-f86d7c7cef06" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:act="https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosPeps/AAF04S22V01/v1/Actualizar">act:Response</con:element></con:representation><con:request name="Request 1" id="17995bb1-e01e-43af-9406-d1a146629cf1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{   
    "datosPepsId": 7,
    "solicitudId": 151,
    "codigoCiiu": "5555",
    "esReconocidoPub": "S",
    "manejaFondosPub": "N",
    "estado": "INACTIVO"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosPeps/AAF04S22V01/v1/Actualizar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S22V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S22V01"/>
  <con:entry key="userId" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="820b69d1-7c84-46ab-a737-bc9d1c7a0316" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-22" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarDatosPepsPorLlave/AAF04S23V01/v1/consultar" id="31026750-b523-4d06-9d5c-5239ddfc3b87"><con:settings/><con:parameters><con:parameter><con:name>datosPepsId</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="107dcd49-b094-4aa1-9ef8-749f2a6f1e42" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosPepsPorLlave/AAF04S23V01/v1/consultar">con1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosPepsPorLlave/AAF04S23V01/v1/consultar">con1:Response</con:element></con:representation><con:request name="Request 1" id="5db99b60-f4c6-429e-b360-5e9e2ea97953" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosPepsPorLlave/AAF04S23V01/v1/consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S23V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="datosPepsId" value="18"/>
  <con:entry key="serviceID" value="AAF04S23V01"/>
  <con:entry key="userId" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>datosPepsId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="84b7cd1b-cb08-4df2-9796-0ba24182161e" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-23" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="RegistrarDatosLocalizacion" path="/wsRegistrarDatosLocalizacionProspecto/AAF04S24V01/v1/RegistrarDatosLocalizacion/" id="65ce3b1c-1a36-4226-a139-474ce37c7d70"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="RegistrarDatosLocalizacion 1" id="6e61d44e-f432-4bac-841f-7ab9a70c56fb" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosLocalizacionProspecto/AAF04S24V01/v1/RegistrarDatosLocalizacion/">reg:Response</con:element></con:representation><con:request name="Request 1" id="186e0bd7-07a2-4ec0-92c0-c0dfe73c03ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "solicitudId": 160,
  "codCiudadResidencia": "11001",
  "direccionResidencia": "CALLE 50 # 01-25",
  "telefonoCelular": "3002365214",
  "telefonoResidencia": "4563217",
  "correoElectronico": "ocri@yahoo.com"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosLocalizacionProspecto/AAF04S24V01/v1/RegistrarDatosLocalizacion/</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S24V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S24V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="010f0cfb-57dd-4f56-b003-346068e592e2" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-24" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://des.restgeneral.esb.porvenir.com</con:endpoint><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint></con:endpoints><con:resource name="ActualizaDatosLocalizacionProspecto" path="/wsActualizarDatosLocalizacionProspecto/AAF04S25V01/v1/ActualizaDatosLocalizacionProspecto" id="09b3e4ce-c6cd-440c-9db0-165a1d2e1b5c"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ActualizaDatosLocalizacionProspecto 1" id="75c4add2-b3b1-4d13-8807-b483a7db26b8" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:act="https://des.restgeneral.esb.porvenir.com/wsActualizarDatosLocalizacionProspecto/AAF04S25V01/v1/ActualizaDatosLocalizacionProspecto">act:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:act="https://des.restgeneral.esb.porvenir.com/wsActualizarDatosLocalizacionProspecto/AAF04S25V01/v1/ActualizaDatosLocalizacionProspecto">act:Response</con:element></con:representation><con:request name="Request 1" id="d0abc92b-68b2-4758-b039-27f051ab58ff" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://des.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "localizacionId": 94,
  "solicitudId": 145,
  "codCiudadResidencia": "11001",
  "direccionResidencia": "Crr 1 # 1a 1",
  "telefonoCelular": "3002456548",
  "telefonoResidencia": "7896542",
  "correoElectronico": "datoslaborales@prueba.com",
  "estado": "ACTIVO"
}</con:request><con:originalUri>https://des.restgeneral.esb.porvenir.com/wsActualizarDatosLocalizacionProspecto/AAF04S25V01/v1/ActualizaDatosLocalizacionProspecto</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S25V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S25V01"/>
  <con:entry key="userId" value="por08167"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="598cbcfa-0a99-4298-a125-42db18dbeecf" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-25" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarLocalizacionProspectoPorLlave/AAF04S26V01/v1/Consultar" id="8f1a03bb-6384-4bd9-85d1-47da9c9c69da"><con:settings/><con:parameters><con:parameter><con:name>localizacionId</con:name><con:value>50</con:value><con:style>QUERY</con:style><con:default>50</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="c06aa84c-3505-4033-a04f-89cf73ae7bd4" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:con1="https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionProspectoPorLlave/AAF04S26V01/v1/Consultar">con1:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionProspectoPorLlave/AAF04S26V01/v1/Consultar">con1:Response</con:element></con:representation><con:request name="Request 1" id="15d3e9af-ee61-4c14-9f1c-bdb66a760920" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionProspectoPorLlave/AAF04S26V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S26V01"/>
  <con:entry key="headerRq" value="AAF04S26V01"/>
  <con:entry key="serviceID" value="AAF04S26V01"/>
</con:parameters><con:parameterOrder><con:entry>localizacionId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="d209af77-b951-4a3b-869a-38c712cda8ac" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-26" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="Consultar" path="/wsConsultarDatosPepsPorIdSolicitud/AAF04S27V01/v1/consultar/" id="536728e5-3142-4c5f-856a-63e10875d52b"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>150</con:value><con:style>QUERY</con:style><con:default>150</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Consultar 1" id="83cbb293-2f4b-4da6-89b3-51f7f877ba85" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.restgeneral.esb.porvenir.com/wsConsultarDatosPepsPorIdSolicitud/AAF04S27V01/v1/consultar/">con1:Response</con:element></con:representation><con:request name="Request 1" id="595b3399-127c-42ca-8427-b94d67c5bfb0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarDatosPepsPorIdSolicitud/AAF04S27V01/v1/consultar/</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S27V01"/>
  <con:entry key="solicitudId" value="150"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S27V01"/>
  <con:entry key="userID" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>headerRq</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="8180b352-ca12-4c3c-9d29-8e9958a5ea61" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-27" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="ConsultarLocalizacionPorId" path="/wsConsultarLocalizacionPorIdSolicitud/AAF04S28V01/v1/ConsultarLocalizacionPorId" id="19e45d0f-d10f-482a-b0c9-80655deeda7e"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>150</con:value><con:style>QUERY</con:style><con:default>150</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ConsultarLocalizacionPorId 1" id="183a6ca8-f407-4fcc-8c32-e6a27a4aa9c4" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:con1="https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionPorIdSolicitud/AAF04S28V01/v1/ConsultarLocalizacionPorId">con1:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionPorIdSolicitud/AAF04S28V01/v1/ConsultarLocalizacionPorId">con1:Response</con:element></con:representation><con:request name="Request 1" id="0e9aada4-1717-4124-8fdd-2ae0e08c5427" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionPorIdSolicitud/AAF04S28V01/v1/ConsultarLocalizacionPorId</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S28V01"/>
  <con:entry key="solicitudId" value="150"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S28V01"/>
  <con:entry key="userID" value="POR07541"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="373d9f12-673b-42da-88d4-ff7bbd91e3c9" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-33" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="ConsumeProcedure" path="/wsRegistrarSolicitudAfilicacionPO/AAF04S30V01/v1/ConsumeProcedure" id="6e14cdb0-532c-4703-8da0-67207c5cbdb4"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>151</con:value><con:style>QUERY</con:style><con:default>151</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ConsumeProcedure 1" id="91b31247-e9c6-49c7-b326-73d24cef0583" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.restgeneral.esb.porvenir.com/wsRegistrarSolicitudAfilicacionPO/AAF04S30V01/v1/ConsumeProcedure">con1:Response</con:element></con:representation><con:request name="Request 1" id="327d7691-df00-4daa-8074-b8953ca20f92" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsRegistrarSolicitudAfilicacionPO/AAF04S30V01/v1/ConsumeProcedure</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S30V01"/>
  <con:entry key="solicitudId" value="151"/>
  <con:entry key="headerRq" value="AAF04S30V01"/>
  <con:entry key="serviceID" value="AAF04S30V01"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="7bd5557b-b09a-464a-8cb3-bec75764eb2a" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-34" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="RegistrarDatosFinancieros" path="/wsRegistrarDatosFinancierosProspecto/v1/RegistrarDatosFinancieros" id="d85effe9-ba66-46cf-8161-93bbc029b2c8"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="RegistrarDatosFinancieros 1" id="493c5d1c-3c6c-49d4-ada9-8aeb37e7bd9c" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="https://prb.restgeneral.esb.porvenir.com/wsRegistrarDatosFinancierosProspecto/v1/RegistrarDatosFinancieros">reg:Response</con:element></con:representation><con:request name="Request 1" id="9fbb662f-9fdf-464f-8f77-6b1eac63ed2a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "solicitudId": 16,
  "origenFondos": "Banco",
  "ingresosLaboralesMes": 500000,
  "indicadorOtrosIngresos": "N",
  "otrosIngresosMes": 0,
  "descripcionOtrosingresos": "",
  "totalEgresosMes": 250000,
  "totalActivos": 2000000,
  "totalPasivos": 0,
  "indicadorDeclaracionRenta": "N",
  "anioDeclaracionRenta": 0,
  "anioIngresosNoDeclarante": 0,
  "ingresosNoDeclarante": 0,
  "anioPatrimonioBrutoNoDeclarante": 0,
  "ingresosPatrimonioBrutoNoDeclarante": 0,
  "anioRetefuenteNoDeclarante": 0,
  "ingresosRetefuenteNoDeclarante": 0,
  "anioNoDeclarante": 0,
  "indicadorMonedaExtrangera": "N",
  "tipoOperacionMoneda": "",
  "tipoProductoMoneda": "",
  "entidadMoneda": "",
  "numeroProductoMoneda": 0,
  "montoMoneda": 0,
  "paisMoneda": "",
  "ciudadMoneda": "",
  "tipoMoneda": ""
}</con:request><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsRegistrarDatosFinancierosProspecto/v1/RegistrarDatosFinancieros</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S17V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S17V01"/>
  <con:entry key="userID" value="por07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="701b00b8-bb86-4772-bb4c-c2c3f0763c46" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-35" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="ActualizarDatosFinancieros" path="/wsActualizarDatosFinancierosProspecto/v1/ActualizarDatosFinancieros" id="4263259c-b571-42e8-bfee-2a40846280ac"><con:settings/><con:parameters><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ActualizarDatosFinancieros 1" id="b8462aa6-8fe8-4dff-befa-167193d179d3" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:act="https://prb.obligatorias.centrodeservicios.porvenir.comwsActualizarDatosFinancierosProspecto/v1/ActualizarDatosFinancieros">act:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:act="https://prb.obligatorias.centrodeservicios.porvenir.comwsActualizarDatosFinancierosProspecto/v1/ActualizarDatosFinancieros">act:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="0a5695b6-cc1b-44ca-97ce-1c5dd30d2bb2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "datosFinancierosId": 5,
  "solicitudId": 15,
  "origenFondos": "Banco",
  "ingresosLaboralesMes": 1000000,
  "indicadorOtrosIngresos": "N",
  "otrosIngresosMes": 0,
  "descripcionOtrosingresos": "",
  "totalEgresosMes": 250000,
  "totalActivos": 2000000,
  "totalPasivos": 0,
  "indicadorDeclaracionRenta": "N",
  "anioDeclaracionRenta": 0,
  "anioIngresosNoDeclarante": 0,
  "ingresosNoDeclarante": 0,
  "anioPatrimonioBrutoNoDeclarante": 0,
  "ingresosPatrimonioBrutoNoDeclarante": 0,
  "anioRetefuenteNoDeclarante": 0,
  "ingresosRetefuenteNoDeclarante": 0,
  "anioNoDeclarante": 0,
  "indicadorMonedaExtrangera": "N",
  "tipoOperacionMoneda": "",
  "tipoProductoMoneda": "",
  "entidadMoneda": "",
  "numeroProductoMoneda": 0,
  "montoMoneda": 0,
  "paisMoneda": "",
  "ciudadMoneda": "",
  "tipoMoneda": "",
  "estado": "ACTIVO"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.comwsActualizarDatosFinancierosProspecto/v1/ActualizarDatosFinancieros</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="V01"/>
  <con:entry key="userID" value="por07885"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="0d486bd8-4a5c-4f3d-9713-65243bca00b9" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-36" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint></con:endpoints><con:resource name="ConsultarDatosPorId" path="/wsConsultarDatosFinancierosProspectoIdSolicitud/v1/ConsultarDatosPorId" id="b00c93b7-a3fe-4e18-a308-a4200c8a9eec"><con:settings/><con:parameters><con:parameter><con:name>solicitudId</con:name><con:value>151</con:value><con:style>QUERY</con:style><con:default>151</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ConsultarDatosPorId 1" id="1bdb5804-487a-4cbb-88b4-a247b60b6e0d" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.restgeneral.esb.porvenir.com/wsConsultarDatosFinancierosProspectoIdSolicitud/v1/ConsultarDatosPorId">con1:Response</con:element></con:representation><con:request name="Request 1" id="6d9c2c45-1dda-469e-a947-f2ef13cc330d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarDatosFinancierosProspectoIdSolicitud/v1/ConsultarDatosPorId</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S11V01"/>
  <con:entry key="solicitudId" value="151"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="8c189714-d660-4e0b-84d0-d4b49986281d" wadlVersion="http://wadl.dev.java.net/2009/02" name="DT-SER-37" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint></con:endpoints><con:resource name="ConsultarDatosPorLlave" path="/wsConsultarDatosFinancierosProspectoPorLlave/v1/ConsultarDatosPorLlave" id="a7802b26-668b-4fb1-be42-ee2a0cd7c84b"><con:settings/><con:parameters><con:parameter><con:name>datosFinancierosId</con:name><con:value>5</con:value><con:style>QUERY</con:style><con:default>5</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>headerRq</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceID</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>serviceTransaction</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ConsultarDatosPorLlave 1" id="00627d8d-58d3-433d-a11b-64336cf0e2e0" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosFinancierosProspectoPorLlave/v1/ConsultarDatosPorLlave">con1:Response</con:element></con:representation><con:request name="Request 1" id="82c0cc2b-4477-44f1-b776-42993853dd5f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosFinancierosProspectoPorLlave/v1/ConsultarDatosPorLlave</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="datosFinancierosId" value="5"/>
  <con:entry key="serviceTransaction" value="AAF04S11V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S11V01"/>
</con:parameters><con:parameterOrder><con:entry>datosFinancierosId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="0b7794c5-50f1-4fe8-b412-6d0c6fa71846" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="56a4f89a-f6b2-4837-8657-cbba1813cd32" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="DT-SER-01" id="b3f6ca95-6bee-4eb7-9be1-f35b6cca867f"><con:settings/><con:config service="DT-SER-01" resourcePath="/wsConsultaViabilidadAfiliacionWeb/obligatorias/v1/RegistroAfiliados/Clientes/Afiliados" methodName="Afiliados 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-01" id="2325822b-cceb-4066-b9bd-96f4726c6a4b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://des.restgeneral.esb.porvenir.com:443</con:endpoint><con:request/><con:originalUri>https://des.restgeneral.esb.porvenir.com/wsConsultaViabilidadAfiliacionWeb/obligatorias/v1/RegistroAfiliados/Clientes/Afiliados</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tipoDocumento" value="${#TestCase#tipoDocumento}"/>
  <con:entry key="serviceTransaction" value="AAF04S03V01"/>
  <con:entry key="headerRq" value="AAF04S03V01"/>
  <con:entry key="numeroDocumento" value="${#TestCase#numeroDocumento}"/>
  <con:entry key="certifica" value="false"/>
  <con:entry key="serviceID" value="AAF04S03V01"/>
</con:parameters><con:parameterOrder><con:entry>tipoDocumento</con:entry><con:entry>numeroDocumento</con:entry><con:entry>certifica</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-01_Groovy" id="05991244-a227-484d-acac-002cc98ea8c6"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(0);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase
        
  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-01 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("tipoDocumento",d[0])
               	 myTestCase.setPropertyValue("numeroDocumento",d[1])



               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-01")
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-01"]. testRequest.response.timeTaken; 
                     // log.info response;
               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'tipoDocumento: '+d[0]+' '+"\n"+
               	 'numeroDocumento: '+d[1]+"\n"

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-01#Response}')
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++
				rownum++	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(re);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-01#Response}')
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-01"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-02" id="de5417ca-a1f0-4176-9430-9e900de84721"><con:settings/><con:config service="DT-SER-02" resourcePath="/wsValidaListaRestrictivaWeb/crm/v1/clientes/empleadores" methodName="Empleadores 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-02" id="255ae3ef-9500-4caf-b3c5-da2138c685a4" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsValidaListaRestrictivaWeb/crm/v1/clientes/empleadores</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AEM01S01V01"/>
  <con:entry key="pTipoDocumento" value="${#TestCase#pTipoDocumento}"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="pNumeroDocumento" value="${#TestCase#pNumeroDocumento}"/>
</con:parameters><con:parameterOrder><con:entry>pTipoDocumento</con:entry><con:entry>pNumeroDocumento</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-02_Groovy" id="77dbde00-89a7-484f-b127-4af77bdd4b51"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(1);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-02 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("pTipoDocumento",d[0])
               	 myTestCase.setPropertyValue("pNumeroDocumento",d[1])



               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-02")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'pTipoDocumento: '+d[0]+' '+"\n"+
               	 'pNumeroDocumento: '+d[1]+"\n"

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-02#Response}')
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-02"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++
				rownum++	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result); 

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-02#Response}')
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-02"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-03" id="6876fcad-f491-4084-90d0-492e6ab94ead"><con:settings/><con:config service="DT-SER-03" resourcePath="/wsValidaAfiliacionEnProcesoWeb/obligatorias/v1/Clientes/Afiliados" methodName="Afiliados 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-03" id="0eb634b9-8280-4d76-8e00-d08a7d2ad45f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsValidaAfiliacionEnProcesoWeb/obligatorias/v1/Clientes/Afiliados</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tipoDocumento" value="${#TestCase#tipoDocumento}"/>
  <con:entry key="serviceTransaction" value=""/>
  <con:entry key="headerRq" value="AAF04S01V01"/>
  <con:entry key="numeroDocumento" value="${#TestCase#numeroDocumento}"/>
  <con:entry key="serviceID" value="AAF04S01V01"/>
</con:parameters><con:parameterOrder><con:entry>tipoDocumento</con:entry><con:entry>numeroDocumento</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-03_Groovy" id="ce2a273d-c613-48f8-8ab3-add86664ca1c"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(2);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-03 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("tipoDocumento",d[0])
               	 myTestCase.setPropertyValue("numeroDocumento",d[1])



               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-03")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'tipoDocumento: '+d[0]+' '+"\n"+
               	 'numeroDocumento: '+d[1]+"\n"

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-03#Response}')
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-03"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++
				rownum++	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-03#Response}')
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-03"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-04" id="db5c9770-b19c-4a54-8826-62f3a61e4977"><con:settings/><con:config service="DT-SER-04" resourcePath="/wsRegistrarAfiliacionProspecto/AAF04S04V01/v1/Registrar" methodName="Registrar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-04" id="1099c8d1-d7ff-4cd5-b5d3-2e1fd47810fc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "solicitudId": ${#TestCase#solicitudId},
  "usuario": "${#TestCase#usuario}",
  "password": "${#TestCase#password}",
  "tipoIdSolicitante": "${#TestCase#tipoIdSolicitante}",
  "numeroIdSolicitante": "${#TestCase#numeroIdSolicitante}",
  "fechaSolicitud": "${#TestCase#fechaSolicitud}",
  "estadoSolicitud": "${#TestCase#estadoSolicitud}",
  "esPep": "${#TestCase#esPep}",
  "habeasData": "${#TestCase#habeasData}",
  "autorizaCentrales": "${#TestCase#autorizaCentrales}",
  "tipoVinculacionId": "${#TestCase#tipoVinculacionId}"
}
</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarAfiliacionProspecto/AAF04S04V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userId" value="PRUEBA"/>
</con:parameters><con:parameterOrder><con:entry>userId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-04_Groovy" id="330378e2-ad72-4381-8f45-0619eccb4c94"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(3);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-04 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("usuario",d[1])
               	 myTestCase.setPropertyValue("password",d[2])
               	 myTestCase.setPropertyValue("tipoIdSolicitante",d[3])
               	 myTestCase.setPropertyValue("numeroIdSolicitante",d[4])
               	 myTestCase.setPropertyValue("fechaSolicitud",d[5])
               	 myTestCase.setPropertyValue("estadoSolicitud",d[6])
               	 myTestCase.setPropertyValue("esPep",d[7])
               	 myTestCase.setPropertyValue("habeasData",d[8])
               	 myTestCase.setPropertyValue("autorizaCentrales",d[9])
               	 myTestCase.setPropertyValue("tipoVinculacionId",d[10])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-04")

               	 def xmlString =
				 '{"solicitudId": '+d[0]+','+"\n"+
               	 '"usuario": "'+d[1]+'",'+"\n"+
               	 '"password": "'+d[2]+'",'+"\n"+
               	 '"tipoIdSolicitante": "'+d[3]+'",'+"\n"+ 
               	 '"numeroIdSolicitante": "'+d[4]+'",'+"\n"+ 
               	 '"fechaSolicitud": "'+d[5]+'",'+"\n"+ 
               	 '"estadoSolicitud": "'+d[6]+'",'+"\n"+ 
               	 '"esPep": "'+d[7]+'",'+"\n"+
               	 '"habeasData": "'+d[8]+'",'+"\n"+
               	 '"autorizaCentrales": "'+d[9]+'",'+"\n"+
               	 '"tipoVinculacionId": "'+d[10]+'"'+"\n"+                	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-04#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-04"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res);
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++
				rownum++	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-04#Response}')
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-04"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-05" id="ab27061f-9649-45c2-9b5e-556595985b00"><con:settings/><con:config service="DT-SER-05" resourcePath="/wsActualizarAfiliacionProspecto/AAF04S05V01/v1/Actualizar" methodName="Actualizar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-05" id="de5aa049-754b-4e67-9663-de07967f16f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "solicitudId": ${#TestCase#solicitudId},
  "password": "${#TestCase#password}",
  "tipoIdSolicitante": "${#TestCase#tipoIdSolicitante}",
  "numeroIdSolicitante": ${#TestCase#numeroIdSolicitante},
  "estadoSolicitud": "${#TestCase#estadoSolicitud}",
  "esPep": "${#TestCase#esPep}",
  "habeasData": "${#TestCase#habeasData}",
  "autorizaCentrales": "${#TestCase#autorizaCentrales}",
  "estado": "${#TestCase#estado}",
  "tipoVinculacionId": "${#TestCase#tipoVinculacionId}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarAfiliacionProspecto/AAF04S05V01/v1/Actualizar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S05V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>userId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-05_Groovy" id="3db67208-ab99-4142-b0f4-32fac15a333d"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(4);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-05 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("password",d[1])
               	 myTestCase.setPropertyValue("tipoIdSolicitante",d[2])
               	 myTestCase.setPropertyValue("numeroIdSolicitante",d[3])
               	 myTestCase.setPropertyValue("estadoSolicitud",d[4])
               	 myTestCase.setPropertyValue("esPep",d[5])
               	 myTestCase.setPropertyValue("habeasData",d[6])
               	 myTestCase.setPropertyValue("autorizaCentrales",d[7])
               	 myTestCase.setPropertyValue("estado",d[8])
               	 myTestCase.setPropertyValue("tipoVinculacionId",d[9])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-05")

               	 def xmlString =
				 '{"solicitudId": '+d[0]+','+"\n"+
               	 '"password": "'+d[1]+'",'+"\n"+
               	 '"tipoIdSolicitante": "'+d[2]+'",'+"\n"+
               	 '"numeroIdSolicitante": '+d[3]+','+"\n"+ 
               	 '"estadoSolicitud": "'+d[4]+'",'+"\n"+ 
               	 '"esPep": "'+d[5]+'",'+"\n"+ 
               	 '"habeasData": "'+d[6]+'",'+"\n"+ 
               	 '"autorizaCentrales": "'+d[7]+'",'+"\n"+
               	 '"estado": "'+d[8]+'",'+"\n"+
               	 '"tipoVinculacionId": "'+d[9]+'"'+"\n"+                	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-05#Response}')
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-05"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++
				rownum++	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-05#Response}')
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-05"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-06" id="ccf17c35-978a-4893-b9e5-ff2f86d8b70e"><con:settings/><con:config service="DT-SER-06" resourcePath="/wsConsultarAfiliacionProspecto/AAF04S07V01/v1/Consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-06" id="0157784a-be87-44f5-bf45-3167411e382e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarAfiliacionProspecto/AAF04S07V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S07V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-06_Groovy" id="fe64ceee-ac4f-46da-9b5a-d581ac101927"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(5);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-06 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-06")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-06#Response}')
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-06"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++
				rownum++	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-06#Response}')
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-06"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-07" id="3111ebe3-000e-45fc-a5bd-dd7959f7e87f"><con:settings/><con:config service="DT-SER-07" resourcePath="/wsConsultarAfiliacionProspecto/AAF04S06V01/v1/Consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-07" id="86a34a84-9f88-4e32-9c9e-49612f24f738" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarAfiliacionProspecto/AAF04S06V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tipoIdSolicitante" value="${#TestCase#tipoIdSolicitante}"/>
  <con:entry key="serviceTransaction" value="AAF04S06V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userID" value="test"/>
  <con:entry key="numeroIdSolicitante" value="${#TestCase#numeroIdSolicitante}"/>
</con:parameters><con:parameterOrder><con:entry>tipoIdSolicitante</con:entry><con:entry>numeroIdSolicitante</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-07_Groovy" id="b69a015f-f950-4a26-ae33-6e488642d84a"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(6);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-07 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("tipoIdSolicitante",d[0])
               	 myTestCase.setPropertyValue("numeroIdSolicitante",d[1])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-07")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'tipoIdSolicitante: '+d[0]+' '+"\n"+
               	 'numeroIdSolicitante: '+d[1]+"\n"

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-07#Response}')
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-07"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++
				rownum++	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-07#Response}')
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-07"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-08" id="98192018-0a35-4510-8812-5e5d54a68ba1"><con:settings/><con:config service="DT-SER-08" resourcePath="/wsRegistrarDatosBasicosProspecto/AAF04S08V01/v1/Registrar" methodName="Registrar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-08" id="40449e35-68e1-4944-b49f-9dc4a9767818" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{   
    "solicitudId": ${#TestCase#solicitudId},
    "codigoCiudadExpDoc": "${#TestCase#codigoCiudadExpDoc}",
    "fechaExpDoc": "${#TestCase#fechaExpDoc}",
    "fechaNacimiento": "${#TestCase#fechaNacimiento}",
    "genero": "${#TestCase#genero}",
    "primerApellido": "${#TestCase#primerApellido}",
    "segundoApellido": "${#TestCase#segundoApellido}",
    "primerNombre": "${#TestCase#primerNombre}",
    "segundoNombre": "${#TestCase#segundoNombre}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosBasicosProspecto/AAF04S08V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S08V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal;userID=PO"/>
  <con:entry key="serviceID" value="AAF04S08V01"/>
  <con:entry key="userId" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-08_Groovy" id="1d58d4f1-042a-4583-a54d-250a06c56b01"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(7);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-08 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("codigoCiudadExpDoc",d[1])
               	 myTestCase.setPropertyValue("fechaExpDoc",d[2])
               	 myTestCase.setPropertyValue("fechaNacimiento",d[3])
               	 myTestCase.setPropertyValue("genero",d[4])
               	 myTestCase.setPropertyValue("primerApellido",d[5])
               	 myTestCase.setPropertyValue("segundoApellido",d[6])
               	 myTestCase.setPropertyValue("primerNombre",d[7])
               	 myTestCase.setPropertyValue("segundoNombre",d[8])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-08")

               	 def xmlString =
				 '{"solicitudId": '+d[0]+','+"\n"+
               	 '"codigoCiudadExpDoc": "'+d[1]+'",'+"\n"+
               	 '"fechaExpDoc": "'+d[2]+'",'+"\n"+
               	 '"fechaNacimiento": "'+d[3]+'",'+"\n"+ 
               	 '"genero": "'+d[4]+'",'+"\n"+ 
               	 '"primerApellido": "'+d[5]+'",'+"\n"+ 
               	 '"segundoApellido": "'+d[6]+'",'+"\n"+ 
               	 '"primerNombre": "'+d[7]+'",'+"\n"+
               	 '"segundoNombre": "'+d[8]+'"'+"\n"+               	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-08#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-08"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         

                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.               	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-08#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-08"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-09" id="6819c523-358e-4a3f-bdb7-1800dffeb5ae"><con:settings/><con:config service="DT-SER-09" resourcePath="/wsActualizarDatosBasicosProspecto/AAF04S09V01/v1/ActualizarDatos/" methodName="ActualizarDatos 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-09" id="435423d7-5cab-44d0-a887-0606684d1c39" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "datosBasicosId": ${#TestCase#datosBasicosId},
  "solicitudId": ${#TestCase#solicitudId},
  "estado": "${#TestCase#estado}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosBasicosProspecto/AAF04S09V01/v1/ActualizarDatos/</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S09V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceId" value="AAF04S09V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceId</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-09_Groovy" id="a3c5d52b-4e8e-406f-8444-55f75732d82d"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(8);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-09 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosBasicosId",d[0])
               	 myTestCase.setPropertyValue("solicitudId",d[1])
               	 myTestCase.setPropertyValue("estado",d[2])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-09")

               	 def xmlString =
				 '{"datosBasicosId": '+d[0]+','+"\n"+
               	 '"solicitudId": "'+d[1]+'",'+"\n"+
               	 '"estado": "'+d[2]+'"'+"\n"+              	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-09#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-09"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-09#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-09"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-10" id="e2991d91-983a-460d-9ef7-027dbbfcf257"><con:settings/><con:config service="DT-SER-10" resourcePath="/wsConsultarDatosBasicosProspecto/AAF04S10V01/v1/Consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-10" id="8647e1ff-2139-49e4-9793-bb0644be2bd5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosBasicosProspecto/AAF04S10V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S08V01"/>
  <con:entry key="datosBasicosId" value="99"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal;userID=PO"/>
  <con:entry key="serviceID" value="AAF04S08V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>datosBasicosId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-10_Groovy" id="e071dbd4-422d-4393-bd9f-afc01e9cd1f5"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(9);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-10 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosBasicosId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-10")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'datosBasicosId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-10#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-10"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-10#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-10"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-11" id="23add07f-01a8-4d57-8966-aa411ef14525"><con:settings/><con:config service="DT-SER-11" resourcePath="/wsConsultarDatosBasicosProspectoIdSolicitud/AAF04S11V01/v1/Consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-11" id="433b1b00-f754-4f1c-8c47-9ec796ac35bb" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosBasicosProspectoIdSolicitud/AAF04S11V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S11V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-11_Groovy" id="9887f81e-183d-47b9-9f76-8694b4162fe7"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(10);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-11 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-11")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-11#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-11"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-11#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-11"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-12" id="c3f23bc8-6c8d-418f-a93e-86c3b425bebd"><con:settings/><con:config service="DT-SER-12" resourcePath="/wsRegistrarBeneficiarioProspecto/AAF04S13V01/v1/Registrar" methodName="Registrar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-12" id="f693b016-d051-49dd-8d98-c1c60a6ac507" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "solicitudId": ${#TestCase#solicitudId},
  "tipoIdBeneficiario": "${#TestCase#tipoIdBeneficiario}",
  "idBeneficiario": "${#TestCase#idBeneficiario}",
  "fechaNacimiento": "${#TestCase#fechaNacimiento}",
  "genero": "${#TestCase#genero}",
  "primerApellido": "${#TestCase#primerApellido}",
  "segundoApellido": "${#TestCase#segundoApellido}",
  "primerNombre": "${#TestCase#primerNombre}",
  "segundoNombre": "${#TestCase#segundoNombre}",
  "codigoParentesco": "${#TestCase#codigoParentesco}",
  "telefono": "${#TestCase#telefono}"
}
</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarBeneficiarioProspecto/AAF04S13V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S13V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userId" value="por08016"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-12_Groovy" id="0881e08b-20df-4a31-8485-ba65f87fbf77"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(11);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-12 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("tipoIdBeneficiario",d[1])
               	 myTestCase.setPropertyValue("idBeneficiario",d[2])
               	 myTestCase.setPropertyValue("fechaNacimiento",d[3])
               	 myTestCase.setPropertyValue("genero",d[4])
               	 myTestCase.setPropertyValue("primerApellido",d[5])
               	 myTestCase.setPropertyValue("segundoApellido",d[6])
               	 myTestCase.setPropertyValue("primerNombre",d[7])
               	 myTestCase.setPropertyValue("segundoNombre",d[8])
               	 myTestCase.setPropertyValue("codigoParentesco",d[9])
               	 myTestCase.setPropertyValue("telefono",d[10])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-12")

               	 def xmlString =
				 '{"solicitudId": '+d[0]+','+"\n"+
               	 '"tipoIdBeneficiario": "'+d[1]+'",'+"\n"+
               	 '"idBeneficiario": "'+d[2]+'",'+"\n"+
               	 '"fechaNacimiento": "'+d[3]+'",'+"\n"+
               	 '"genero": "'+d[4]+'",'+"\n"+
               	 '"primerApellido": "'+d[5]+'",'+"\n"+
               	 '"segundoApellido": "'+d[6]+'",'+"\n"+
               	 '"primerNombre": "'+d[7]+'",'+"\n"+
               	 '"segundoNombre": "'+d[8]+'",'+"\n"+
               	 '"codigoParentesco": "'+d[9]+'",'+"\n"+
               	 '"telefono": "'+d[10]+'"'+"\n"+            	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-12#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-12"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-12#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-12"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-13" id="700935bd-ec2c-4794-a1de-43eb35b6d13f"><con:settings/><con:config service="DT-SER-13" resourcePath="/wsActualizarBeneficiarioProspecto/AAF04S14V01/v1/Actualizar" methodName="Actualizar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-13" id="86ff4af5-87b3-47d2-aa06-328ee54f6c2a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "beneficiarioId": ${#TestCase#beneficiarioId},
  "tipoIdBeneficiario": "${#TestCase#tipoIdBeneficiario}",
  "idBeneficiario": ${#TestCase#idBeneficiario},
  "fechaNacimiento": "${#TestCase#fechaNacimiento}",
  "genero": "${#TestCase#genero}",
  "primerApellido": "${#TestCase#primerApellido}",
  "segundoApellido": "${#TestCase#segundoApellido}",
  "primerNombre": "${#TestCase#primerNombre}",
  "segundoNombre": "${#TestCase#segundoNombre}",
  "codigoParentesco": "${#TestCase#codigoParentesco}",
  "telefono": "${#TestCase#telefono}",
  "estado": "${#TestCase#estado}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarBeneficiarioProspecto/AAF04S14V01/v1/Actualizar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S14V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userId" value="test"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-13_Groovy" id="b9a4610f-00a2-4ee1-9689-070cd6ee87ec"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(12);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-12 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("beneficiarioId",d[0])
               	 myTestCase.setPropertyValue("tipoIdBeneficiario",d[1])
               	 myTestCase.setPropertyValue("idBeneficiario",d[2])
               	 myTestCase.setPropertyValue("fechaNacimiento",d[3])
               	 myTestCase.setPropertyValue("genero",d[4])
               	 myTestCase.setPropertyValue("primerApellido",d[5])
               	 myTestCase.setPropertyValue("segundoApellido",d[6])
               	 myTestCase.setPropertyValue("primerNombre",d[7])
               	 myTestCase.setPropertyValue("segundoNombre",d[8])
               	 myTestCase.setPropertyValue("codigoParentesco",d[9])
               	 myTestCase.setPropertyValue("telefono",d[10])
               	 myTestCase.setPropertyValue("estado",d[11])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-13")

               	 def xmlString =
				 '{"beneficiarioId": '+d[0]+','+"\n"+
               	 '"tipoIdBeneficiario": "'+d[1]+'",'+"\n"+
               	 '"idBeneficiario": '+d[2]+','+"\n"+
               	 '"fechaNacimiento": "'+d[3]+'",'+"\n"+
               	 '"genero": "'+d[4]+'",'+"\n"+
               	 '"primerApellido": "'+d[5]+'",'+"\n"+
               	 '"segundoApellido": "'+d[6]+'",'+"\n"+
               	 '"primerNombre": "'+d[7]+'",'+"\n"+
               	 '"segundoNombre": "'+d[8]+'",'+"\n"+
               	 '"codigoParentesco": "'+d[9]+'",'+"\n"+
               	 '"telefono": "'+d[10]+'",'+"\n"+ 
               	 '"estado": "'+d[11]+'"'+"\n"+              	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-13#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-13"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-13#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-13"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-14" id="3c5135f2-2392-46a1-a789-6a2ce42847c5"><con:settings/><con:config service="DT-SER-14" resourcePath="/wsConsultarBeneficiarioProspectoPorLlave/AAF04S15V01/v1/Consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-14" id="dccea336-97c8-4fa0-b076-87fbef8f2a36" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarBeneficiarioProspectoPorLlave/AAF04S15V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S15V01"/>
  <con:entry key="beneficiarioId" value="${#TestCase#beneficiarioId}"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
  <con:entry key="userId" value="POR08016"/>
</con:parameters><con:parameterOrder><con:entry>beneficiarioId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-14_Groovy" id="aee5ffb8-9f23-4a70-b92b-57a2fde1764c"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(13);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-14 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("beneficiarioId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-14")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'beneficiarioId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-14#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-14"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-14#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-14"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-15" id="f0a1bb77-6d69-46f2-8ea7-76133d4c1489"><con:settings/><con:config service="DT-SER-15" resourcePath="/wsConsultarBeneficiarioProspecto/AAF04S16V01/v1/Consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-15" id="f70db133-60d1-4f12-aff4-e5e73e574d49" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarBeneficiarioProspecto/AAF04S16V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S16V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="AAF04S16V01"/>
  <con:entry key="serviceID" value="AAF04S16V01"/>
  <con:entry key="userId" value="TEST"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-15_Groovy" id="53edcdd5-811d-4377-8ea5-70d8ecf1a32a"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(14);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-15 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-15")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-15#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-15"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-15#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-15"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-16" id="596ae7fc-4f56-441c-a9a7-1f989b78aa07"><con:settings/><con:config service="DT-SER-16" resourcePath="/wsRegistrarDatosLaboralProspecto/AAF04S17V01/v1/RegistrarDatos" methodName="RegistrarDatos 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-16" id="063bde79-0dea-4417-aff0-5f26201697a3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "solicitudId": ${#TestCase#solicitudId},
  "sucursalId": ${#TestCase#sucursalId},
  "tipoIdEmpleador": "${#TestCase#tipoIdEmpleador}",
  "idEmpleador": ${#TestCase#idEmpleador},
  "razonSocial": "${#TestCase#razonSocial}",
  "codigoCiudadEmpleador": "${#TestCase#codigoCiudadEmpleador}",
  "correoElectronicoEmpleador": "${#TestCase#correoElectronicoEmpleador}",
  "direccionEmpleador": "${#TestCase#direccionEmpleador}",
  "ocupacionCargoActual": "${#TestCase#ocupacionCargoActual}",
  "tipoTrabajador": "${#TestCase#tipoTrabajador}",
  "salario": ${#TestCase#salario}
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosLaboralProspecto/AAF04S17V01/v1/RegistrarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S17V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S17V01"/>
  <con:entry key="userID" value="por07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-16_Groovy" id="da8a4560-c81f-40f1-9374-3bc16824cf42"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(15);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-16 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("sucursalId",d[1])
               	 myTestCase.setPropertyValue("tipoIdEmpleador",d[2])
               	 myTestCase.setPropertyValue("idEmpleador",d[3])
               	 myTestCase.setPropertyValue("razonSocial",d[4])
               	 myTestCase.setPropertyValue("codigoCiudadEmpleador",d[5])
               	 myTestCase.setPropertyValue("correoElectronicoEmpleador",d[6])
               	 myTestCase.setPropertyValue("direccionEmpleador",d[7])
               	 myTestCase.setPropertyValue("ocupacionCargoActual",d[8])
               	 myTestCase.setPropertyValue("tipoTrabajador",d[9])
               	 myTestCase.setPropertyValue("salario",d[10])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-16")

               	 def xmlString =
				 '{"solicitudId": '+d[0]+','+"\n"+
               	 '"sucursalId": '+d[1]+','+"\n"+
               	 '"tipoIdEmpleador": "'+d[2]+'",'+"\n"+
               	 '"idEmpleador": '+d[3]+','+"\n"+
               	 '"razonSocial": "'+d[4]+'",'+"\n"+
               	 '"codigoCiudadEmpleador": "'+d[5]+'",'+"\n"+
               	 '"correoElectronicoEmpleador": "'+d[6]+'",'+"\n"+
               	 '"direccionEmpleador": "'+d[7]+'",'+"\n"+
               	 '"ocupacionCargoActual": "'+d[8]+'",'+"\n"+
               	 '"tipoTrabajador": "'+d[9]+'",'+"\n"+
               	 '"salario": '+d[10]+''+"\n"+              	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-16#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-16"]. testRequest.response.timeTaken;
                     def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     def pr = parsedJson.status.statusCode;
                                                           
                     log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(pr == 400 || res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-16#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-16"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-17" id="c56bec79-1aa6-4d00-bf5a-edcbca115076"><con:settings/><con:config service="DT-SER-17" resourcePath="/wsActualizarDatosLaboralProspecto/AAF04S18V01/v1/ActualizarDatos" methodName="ActualizarDatos 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-17" id="f2b43877-c8f1-49a6-9989-9a581befb8ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "datosLaboralesId": ${#TestCase#datosLaboralesId},
  "solicitudId": ${#TestCase#solicitudId},
  "sucursalId": ${#TestCase#sucursalId},
  "tipoIdEmpleador": "${#TestCase#tipoIdEmpleador}",
  "idEmpleador": ${#TestCase#idEmpleador},
  "razonSocial": "${#TestCase#razonSocial}",
  "codigoCiudadEmpleador": "${#TestCase#codigoCiudadEmpleador}",
  "correoElectronicoEmpleador": "${#TestCase#correoElectronicoEmpleador}",
  "direccionEmpleador": "${#TestCase#direccionEmpleador}",
  "ocupacionCargoActual": "${#TestCase#ocupacionCargoActual}",
  "tipoTrabajador": "${#TestCase#tipoTrabajador}",
  "salario": ${#TestCase#salario},
  "estado": "${#TestCase#estado}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosLaboralProspecto/AAF04S18V01/v1/ActualizarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S18V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal;userID=PO"/>
  <con:entry key="serviceID" value="AAF04S18V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-17_Groovy" id="83b736e2-3977-43b5-9b39-8b6f618864bb"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(16);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-17 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosLaboralesId",d[0])
               	 myTestCase.setPropertyValue("solicitudId",d[1])
               	 myTestCase.setPropertyValue("sucursalId",d[2])
               	 myTestCase.setPropertyValue("tipoIdEmpleador",d[3])
               	 myTestCase.setPropertyValue("idEmpleador",d[4])
               	 myTestCase.setPropertyValue("razonSocial",d[5])
               	 myTestCase.setPropertyValue("codigoCiudadEmpleador",d[6])
               	 myTestCase.setPropertyValue("correoElectronicoEmpleador",d[7])
               	 myTestCase.setPropertyValue("direccionEmpleador",d[8])
               	 myTestCase.setPropertyValue("ocupacionCargoActual",d[9])
               	 myTestCase.setPropertyValue("tipoTrabajador",d[10])
               	 myTestCase.setPropertyValue("salario",d[11])
               	 myTestCase.setPropertyValue("estado",d[12])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-17")

               	 def xmlString =
				 '{"datosLaboralesId": '+d[0]+','+"\n"+
               	 '"solicitudId": '+d[1]+','+"\n"+
               	 '"sucursalId": '+d[2]+','+"\n"+
               	 '"tipoIdEmpleador": "'+d[3]+'",'+"\n"+
               	 '"idEmpleador": '+d[4]+','+"\n"+
               	 '"razonSocial": "'+d[5]+'",'+"\n"+
               	 '"codigoCiudadEmpleador": "'+d[6]+'",'+"\n"+
               	 '"correoElectronicoEmpleador": "'+d[7]+'",'+"\n"+
               	 '"direccionEmpleador": "'+d[8]+'",'+"\n"+
               	 '"ocupacionCargoActual": "'+d[9]+'",'+"\n"+
               	 '"tipoTrabajador": "'+d[10]+'",'+"\n"+ 
               	 '"salario": '+d[11]+','+"\n"+ 
               	 '"estado": "'+d[12]+'"'+"\n"+              	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-17#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-17"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-17#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-17"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-18" id="14f16a0e-b44f-4d65-b444-b985d42f3b15"><con:settings/><con:config service="DT-SER-18" resourcePath="/wsConsultarDatosLaboralProspectoPorLlave/AAF04S19V01/v1/ConsultarDatos" methodName="ConsultarDatos 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-18" id="5c45e29b-b263-41b9-886f-b68021503b94" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosLaboralProspectoPorLlave/AAF04S19V01/v1/ConsultarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S19V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S19V01"/>
  <con:entry key="userID" value="POR07645"/>
  <con:entry key="datosLaboralesId" value="${#TestCase#datosLaboralesId}"/>
</con:parameters><con:parameterOrder><con:entry>datosLaboralesId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-18_Groovy" id="468e6d44-4fe5-48e8-8a9d-68aa85e2968f"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(17);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-18 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosLaboralesId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-18")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'datosLaboralesId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-18#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-18"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-18#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-18"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-19" id="cfeb7070-23ff-4a9f-8b4d-6e5f81ac664f"><con:settings/><con:config service="DT-SER-19" resourcePath="/wsConsultarDatosLaboralProspecto/AAF04S20V01/v1/ConsultarDatos" methodName="ConsultarDatos 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-19" id="1f9b5443-3078-4799-b272-b483c7be8a60" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosLaboralProspecto/AAF04S20V01/v1/ConsultarDatos</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S20V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S20V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-19_Groovy" id="f864b79f-f7fb-4a0c-bbba-c1ff7895b310"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(18);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-19 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-19")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-19#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-19"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-19#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-19"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-20" id="9ff39b9f-8c64-4b80-9a23-8ffc8fca6afe"><con:settings/><con:config service="DT-SER-20" resourcePath="/wsRegistrarDatosPeps/AAF04S21V01/v1/Registrar" methodName="Registrar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-20" id="582a680d-2799-4b9d-8142-83e4fb2b05bf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{   
    "solicitudId": "${#TestCase#solicitudId}",
    "codigoCiiu": "${#TestCase#codigoCiiu}",
    "esReconocidoPub": "${#TestCase#esReconocidoPub}",
    "manejaFondosPub": "${#TestCase#manejaFondosPub}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosPeps/AAF04S21V01/v1/Registrar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S21V01"/>
  <con:entry key="userId" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>serviceTransaction</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-20_Groovy" id="20f55200-2763-4ffd-bb61-6c1bc7442724"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(19);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-20 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("codigoCiiu",d[1])
               	 myTestCase.setPropertyValue("esReconocidoPub",d[2])
               	 myTestCase.setPropertyValue("manejaFondosPub",d[3])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-20")

               	 def xmlString =
				 '{"solicitudId": "'+d[0]+'",'+"\n"+
               	 '"codigoCiiu": "'+d[1]+'",'+"\n"+
               	 '"esReconocidoPub": "'+d[2]+'",'+"\n"+
               	 '"manejaFondosPub": "'+d[3]+'"'+"\n"+             	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-20#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-20"]. testRequest.response.timeTaken;
                     def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     def pr = parsedJson.status.statusCode;                                         
                     log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(pr == 400 || res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-20#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-20"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-21" id="1534e8d2-ca31-45b1-ad07-d0680f2a1043"><con:settings/><con:config service="DT-SER-21" resourcePath="/wsActualizarDatosPeps/AAF04S22V01/v1/Actualizar" methodName="Actualizar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-21" id="17995bb1-e01e-43af-9406-d1a146629cf1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{   
    "datosPepsId": ${#TestCase#datosPepsId},
    "solicitudId": ${#TestCase#solicitudId},
    "codigoCiiu": "${#TestCase#codigoCiiu}",
    "esReconocidoPub": "${#TestCase#esReconocidoPub}",
    "manejaFondosPub": "${#TestCase#manejaFondosPub}",
    "estado": "${#TestCase#estado}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsActualizarDatosPeps/AAF04S22V01/v1/Actualizar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S22V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S22V01"/>
  <con:entry key="userId" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userId</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-21_Groovy" id="43729d58-5d9f-43cc-8a0a-50fc120d5303"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(20);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-21 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosPepsId",d[0])
               	 myTestCase.setPropertyValue("solicitudId",d[1])
               	 myTestCase.setPropertyValue("codigoCiiu",d[2])
               	 myTestCase.setPropertyValue("esReconocidoPub",d[3])
               	 myTestCase.setPropertyValue("manejaFondosPub",d[4])
               	 myTestCase.setPropertyValue("estado",d[5])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-21")

               	 def xmlString =
				 '{"datosPepsId": '+d[0]+','+"\n"+
               	 '"solicitudId": '+d[1]+','+"\n"+
               	 '"codigoCiiu": "'+d[2]+'",'+"\n"+
               	 '"esReconocidoPub": "'+d[3]+'",'+"\n"+
               	 '"manejaFondosPub": "'+d[4]+'",'+"\n"+
               	 '"estado": "'+d[5]+'"'+"\n"+             	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-21#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-21"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-21#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-21"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-22" id="696e4270-fb9e-4ef1-af74-4976766aa064"><con:settings/><con:config service="DT-SER-22" resourcePath="/wsConsultarDatosPepsPorLlave/AAF04S23V01/v1/consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-22" id="5db99b60-f4c6-429e-b360-5e9e2ea97953" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosPepsPorLlave/AAF04S23V01/v1/consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S23V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="datosPepsId" value="${#TestCase#datosPepsId}"/>
  <con:entry key="serviceID" value="AAF04S23V01"/>
  <con:entry key="userId" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>datosPepsId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-22_Groovy" id="42085175-ee74-40e9-8ed8-9c3e67f8bd40"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(21);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-22 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosPepsId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-22")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'datosPepsId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-22#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-22"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-22#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-22"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-23" id="2ee3f88b-366a-49dd-bb5c-5948cbc9f863"><con:settings/><con:config service="DT-SER-23" resourcePath="/wsRegistrarDatosLocalizacionProspecto/AAF04S24V01/v1/RegistrarDatosLocalizacion/" methodName="RegistrarDatosLocalizacion 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-23" id="186e0bd7-07a2-4ec0-92c0-c0dfe73c03ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "solicitudId": ${#TestCase#solicitudId},
  "codCiudadResidencia": "${#TestCase#codCiudadResidencia}",
  "direccionResidencia": "${#TestCase#direccionResidencia}",
  "telefonoCelular": "${#TestCase#telefonoCelular}",
  "telefonoResidencia": "${#TestCase#telefonoResidencia}",
  "correoElectronico": "${#TestCase#correoElectronico}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsRegistrarDatosLocalizacionProspecto/AAF04S24V01/v1/RegistrarDatosLocalizacion/</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S24V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S24V01"/>
  <con:entry key="userID" value="POR07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-23_Groovy" id="776ff6ea-2657-48d8-9f4a-226cd785652a"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(22);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-23 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("codCiudadResidencia",d[1])
               	 myTestCase.setPropertyValue("direccionResidencia",d[2])
               	 myTestCase.setPropertyValue("telefonoCelular",d[3])
               	 myTestCase.setPropertyValue("telefonoResidencia",d[4])
               	 myTestCase.setPropertyValue("correoElectronico",d[5])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-23")

               	 def xmlString =
				 '{"solicitudId": '+d[0]+','+"\n"+
               	 '"codCiudadResidencia": "'+d[1]+'",'+"\n"+
               	 '"direccionResidencia": "'+d[2]+'",'+"\n"+
               	 '"telefonoCelular": "'+d[3]+'",'+"\n"+
               	 '"telefonoResidencia": "'+d[4]+'",'+"\n"+
               	 '"correoElectronico": '+d[5]+''+"\n"+             	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-23#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-23"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-23#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-23"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-24" id="33ded257-ebda-4711-9f4b-638498e5ec1d"><con:settings/><con:config service="DT-SER-24" resourcePath="/wsActualizarDatosLocalizacionProspecto/AAF04S25V01/v1/ActualizaDatosLocalizacionProspecto" methodName="ActualizaDatosLocalizacionProspecto 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-24" id="d0abc92b-68b2-4758-b039-27f051ab58ff" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://des.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "localizacionId": ${#TestCase#localizacionId},
  "solicitudId": ${#TestCase#solicitudId},
  "codCiudadResidencia": "${#TestCase#codCiudadResidencia}",
  "direccionResidencia": "${#TestCase#direccionResidencia}",
  "telefonoCelular": "${#TestCase#telefonoCelular}",
  "telefonoResidencia": "${#TestCase#telefonoResidencia}",
  "correoElectronico": "${#TestCase#correoElectronico}",
  "estado": "${#TestCase#estado}"
}</con:request><con:originalUri>https://des.restgeneral.esb.porvenir.com/wsActualizarDatosLocalizacionProspecto/AAF04S25V01/v1/ActualizaDatosLocalizacionProspecto</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S25V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S25V01"/>
  <con:entry key="userId" value="POR07642"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-24_Groovy" id="d972e221-44ae-44b3-a5ef-7d8a8e6aa8b4"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(23);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-24 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("localizacionId",d[0])
               	 myTestCase.setPropertyValue("solicitudId",d[1])
               	 myTestCase.setPropertyValue("codCiudadResidencia",d[2])
               	 myTestCase.setPropertyValue("direccionResidencia",d[3])
               	 myTestCase.setPropertyValue("telefonoCelular",d[4])
               	 myTestCase.setPropertyValue("telefonoResidencia",d[5])
               	 myTestCase.setPropertyValue("correoElectronico",d[6])
               	 myTestCase.setPropertyValue("estado",d[7])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-24")

               	 def xmlString =
				 '{"localizacionId": '+d[0]+','+"\n"+
               	 '"solicitudId": '+d[1]+','+"\n"+
               	 '"codCiudadResidencia": "'+d[2]+'",'+"\n"+
               	 '"direccionResidencia": "'+d[3]+'",'+"\n"+
               	 '"telefonoCelular": "'+d[4]+'",'+"\n"+
               	 '"telefonoResidencia": "'+d[5]+'",'+"\n"+
               	 '"correoElectronico": "'+d[6]+'",'+"\n"+
               	 '"estado": "'+d[7]+'"'+"\n"+             	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-24#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-24"]. testRequest.response.timeTaken;
                     def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     def pr = parsedJson.Code;                                         
                     log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if( pr == 2322 ||res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-24#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-24"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-25" id="af5f72dc-2bbc-4f50-a864-b8b05ccf2381"><con:settings/><con:config service="DT-SER-25" resourcePath="/wsConsultarLocalizacionProspectoPorLlave/AAF04S26V01/v1/Consultar" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-25" id="15d3e9af-ee61-4c14-9f1c-bdb66a760920" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionProspectoPorLlave/AAF04S26V01/v1/Consultar</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S26V01"/>
  <con:entry key="localizacionId" value="${#TestCase#localizacionId}"/>
  <con:entry key="headerRq" value="AAF04S26V01"/>
  <con:entry key="serviceID" value="AAF04S26V01"/>
</con:parameters><con:parameterOrder><con:entry>localizacionId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-25_Groovy" id="7b3e9643-98e7-4309-b9ca-a12b86146bda"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(24);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-25 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("localizacionId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-25")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'localizacionId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-25#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-25"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-25#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-25"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-26" id="f9612e4d-6f5c-4090-a226-3193c0c47038"><con:settings/><con:config service="DT-SER-26" resourcePath="/wsConsultarDatosPepsPorIdSolicitud/AAF04S27V01/v1/consultar/" methodName="Consultar 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-26" id="595b3399-127c-42ca-8427-b94d67c5bfb0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarDatosPepsPorIdSolicitud/AAF04S27V01/v1/consultar/</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S27V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S27V01"/>
  <con:entry key="userID" value="POR04264"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry><con:entry>headerRq</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-26_Groovy" id="a56efaab-283d-4576-b8dd-d39fa8369d55"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(25);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-26 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-26")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-26#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-26"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-26#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-26"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-27" id="204fd8a3-7c04-4601-857a-a200328b347f"><con:settings/><con:config service="DT-SER-27" resourcePath="/wsConsultarLocalizacionPorIdSolicitud/AAF04S28V01/v1/ConsultarLocalizacionPorId" methodName="ConsultarLocalizacionPorId 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-27" id="0e9aada4-1717-4124-8fdd-2ae0e08c5427" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarLocalizacionPorIdSolicitud/AAF04S28V01/v1/ConsultarLocalizacionPorId</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S28V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S28V01"/>
  <con:entry key="userID" value="POR07541"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-27_Groovy" id="3c7e4f38-c140-4eb2-9e9e-15d8b9423a7b"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(26);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-27 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-27")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-27#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-27"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-27#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-27"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-33" id="6451fb07-433f-443f-912a-1e438e553362"><con:settings/><con:config service="DT-SER-33" resourcePath="/wsRegistrarSolicitudAfilicacionPO/AAF04S30V01/v1/ConsumeProcedure" methodName="ConsumeProcedure 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-33" id="327d7691-df00-4daa-8074-b8953ca20f92" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsRegistrarSolicitudAfilicacionPO/AAF04S30V01/v1/ConsumeProcedure</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S30V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="AAF04S30V01"/>
  <con:entry key="serviceID" value="AAF04S30V01"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-33_Groovy" id="e908eba5-871e-45d5-9fe6-9063a58f9697"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(27);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-33 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-33")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-33#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-33"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-33#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-33"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-34" id="bcbefd09-757f-45a2-bf63-00b1c8b1f084"><con:settings/><con:config service="DT-SER-34" resourcePath="/wsRegistrarDatosFinancierosProspecto/v1/RegistrarDatosFinancieros" methodName="RegistrarDatosFinancieros 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-34" id="9fbb662f-9fdf-464f-8f77-6b1eac63ed2a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request>{
  "solicitudId": ${#TestCase#solicitudId},
  "origenFondos": "${#TestCase#solicitudId}",
  "ingresosLaboralesMes": ${#TestCase#solicitudId},
  "indicadorOtrosIngresos": "${#TestCase#solicitudId}",
  "otrosIngresosMes": ${#TestCase#solicitudId},
  "descripcionOtrosingresos": "${#TestCase#solicitudId}",
  "totalEgresosMes": ${#TestCase#solicitudId},
  "totalActivos": ${#TestCase#solicitudId},
  "totalPasivos": ${#TestCase#solicitudId},
  "indicadorDeclaracionRenta": "${#TestCase#solicitudId}",
  "anioDeclaracionRenta": ${#TestCase#solicitudId},
  "anioIngresosNoDeclarante": ${#TestCase#solicitudId},
  "ingresosNoDeclarante": ${#TestCase#solicitudId},
  "anioPatrimonioBrutoNoDeclarante": ${#TestCase#solicitudId},
  "ingresosPatrimonioBrutoNoDeclarante": ${#TestCase#solicitudId},
  "anioRetefuenteNoDeclarante": ${#TestCase#solicitudId},
  "ingresosRetefuenteNoDeclarante": ${#TestCase#solicitudId},
  "anioNoDeclarante": ${#TestCase#solicitudId},
  "indicadorMonedaExtrangera": "${#TestCase#solicitudId}",
  "tipoOperacionMoneda": "${#TestCase#solicitudId}",
  "tipoProductoMoneda": "${#TestCase#solicitudId}",
  "entidadMoneda": "${#TestCase#solicitudId}",
  "numeroProductoMoneda": ${#TestCase#solicitudId},
  "montoMoneda": ${#TestCase#solicitudId},
  "paisMoneda": "${#TestCase#solicitudId}",
  "ciudadMoneda": "${#TestCase#solicitudId}",
  "tipoMoneda": "${#TestCase#solicitudId}"
}</con:request><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsRegistrarDatosFinancierosProspecto/v1/RegistrarDatosFinancieros</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S17V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="AAF04S17V01"/>
  <con:entry key="userID" value="por07645"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-34_Groovy" id="fa6d7540-2d38-4a4b-8fe2-3ba50ced4deb"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(28);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-34 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])
               	 myTestCase.setPropertyValue("origenFondos",d[1])
               	 myTestCase.setPropertyValue("ingresosLaboralesMes",d[2])
               	 myTestCase.setPropertyValue("indicadorOtrosIngresos",d[3])
               	 myTestCase.setPropertyValue("otrosIngresosMes",d[4])
               	 myTestCase.setPropertyValue("descripcionOtrosingresos",d[5])
               	 myTestCase.setPropertyValue("totalEgresosMes",d[6])
               	 myTestCase.setPropertyValue("totalActivos",d[7])
               	 myTestCase.setPropertyValue("totalPasivos",d[8])
               	 myTestCase.setPropertyValue("indicadorDeclaracionRenta",d[9])
               	 myTestCase.setPropertyValue("anioDeclaracionRenta",d[10])
               	 myTestCase.setPropertyValue("anioIngresosNoDeclarante",d[11])
               	 myTestCase.setPropertyValue("ingresosNoDeclarante",d[12])
               	 myTestCase.setPropertyValue("anioPatrimonioBrutoNoDeclarante",d[13])
               	 myTestCase.setPropertyValue("ingresosPatrimonioBrutoNoDeclarante",d[14])
               	 myTestCase.setPropertyValue("anioRetefuenteNoDeclarante",d[15])
               	 myTestCase.setPropertyValue("ingresosRetefuenteNoDeclarante",d[16])
               	 myTestCase.setPropertyValue("anioNoDeclarante",d[17])
               	 myTestCase.setPropertyValue("indicadorMonedaExtrangera",d[18])
               	 myTestCase.setPropertyValue("tipoOperacionMoneda",d[19])
               	 myTestCase.setPropertyValue("tipoProductoMoneda",d[20])
               	 myTestCase.setPropertyValue("entidadMoneda",d[21])
               	 myTestCase.setPropertyValue("numeroProductoMoneda",d[22])
               	 myTestCase.setPropertyValue("montoMoneda",d[23])
               	 myTestCase.setPropertyValue("paisMoneda",d[24])
               	 myTestCase.setPropertyValue("ciudadMoneda",d[25])
               	 myTestCase.setPropertyValue("tipoMoneda",d[26])               	 

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-34")

               	 def xmlString =
				 '{"solicitudId": '+d[0]+','+"\n"+
               	 '"origenFondos": "'+d[1]+'",'+"\n"+
               	 '"ingresosLaboralesMes": '+d[2]+','+"\n"+
               	 '"indicadorOtrosIngresos": "'+d[3]+'",'+"\n"+
               	 '"otrosIngresosMes": '+d[4]+','+"\n"+
               	 '"descripcionOtrosingresos": "'+d[5]+'",'+"\n"+
               	 '"totalEgresosMes": '+d[6]+','+"\n"+
               	 '"totalActivos": '+d[7]+','+"\n"+
               	 '"totalPasivos": '+d[8]+','+"\n"+
               	 '"indicadorDeclaracionRenta": "'+d[9]+'",'+"\n"+
               	 '"anioDeclaracionRenta": '+d[10]+','+"\n"+
               	 '"anioIngresosNoDeclarante": '+d[11]+','+"\n"+
               	 '"ingresosNoDeclarante": '+d[12]+','+"\n"+
               	 '"anioPatrimonioBrutoNoDeclarante": '+d[13]+','+"\n"+
               	 '"ingresosPatrimonioBrutoNoDeclarante": '+d[14]+','+"\n"+
               	 '"anioRetefuenteNoDeclarante": '+d[15]+','+"\n"+
               	 '"ingresosRetefuenteNoDeclarante": '+d[16]+','+"\n"+
               	 '"anioNoDeclarante": '+d[17]+','+"\n"+
               	 '"indicadorMonedaExtrangera": "'+d[18]+'",'+"\n"+
               	 '"tipoOperacionMoneda": "'+d[19]+'",'+"\n"+
               	 '"tipoProductoMoneda": "'+d[20]+'",'+"\n"+
               	 '"entidadMoneda": "'+d[21]+'",'+"\n"+
               	 '"numeroProductoMoneda": '+d[22]+','+"\n"+
               	 '"montoMoneda": '+d[23]+','+"\n"+
               	 '"paisMoneda": "'+d[24]+'",'+"\n"+
               	 '"ciudadMoneda": "'+d[25]+'",'+"\n"+
               	 '"tipoMoneda": "'+d[26]+'"'+"\n"+             	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-34#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-34"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-34#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-34"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-35" id="00c16ecb-6f19-49df-8311-aa27819cbbc8"><con:settings/><con:config service="DT-SER-35" resourcePath="/wsActualizarDatosFinancierosProspecto/v1/ActualizarDatosFinancieros" methodName="ActualizarDatosFinancieros 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-35" id="0a5695b6-cc1b-44ca-97ce-1c5dd30d2bb2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request>{
  "datosFinancierosId": ${#TestCase#solicitudId},
  "solicitudId": ${#TestCase#solicitudId},
  "origenFondos": "${#TestCase#solicitudId}",
  "ingresosLaboralesMes": ${#TestCase#solicitudId},
  "indicadorOtrosIngresos": "${#TestCase#solicitudId}",
  "otrosIngresosMes": ${#TestCase#solicitudId},
  "descripcionOtrosingresos": "${#TestCase#solicitudId}",
  "totalEgresosMes": ${#TestCase#solicitudId},
  "totalActivos": ${#TestCase#solicitudId},
  "totalPasivos": ${#TestCase#solicitudId},
  "indicadorDeclaracionRenta": "${#TestCase#solicitudId}",
  "anioDeclaracionRenta": ${#TestCase#solicitudId},
  "anioIngresosNoDeclarante": ${#TestCase#solicitudId},
  "ingresosNoDeclarante": ${#TestCase#solicitudId},
  "anioPatrimonioBrutoNoDeclarante": ${#TestCase#solicitudId},
  "ingresosPatrimonioBrutoNoDeclarante": ${#TestCase#solicitudId},
  "anioRetefuenteNoDeclarante": ${#TestCase#solicitudId},
  "ingresosRetefuenteNoDeclarante": ${#TestCase#solicitudId},
  "anioNoDeclarante": ${#TestCase#solicitudId},
  "indicadorMonedaExtrangera": "${#TestCase#solicitudId}",
  "tipoOperacionMoneda": "${#TestCase#solicitudId}",
  "tipoProductoMoneda": "${#TestCase#solicitudId}",
  "entidadMoneda": "${#TestCase#solicitudId}",
  "numeroProductoMoneda": ${#TestCase#solicitudId},
  "montoMoneda": ${#TestCase#solicitudId},
  "paisMoneda": "${#TestCase#solicitudId}",
  "ciudadMoneda": "${#TestCase#solicitudId}",
  "tipoMoneda": "${#TestCase#solicitudId}",
  "estado": "${#TestCase#solicitudId}"
}</con:request><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.comwsActualizarDatosFinancierosProspecto/v1/ActualizarDatosFinancieros</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="V01"/>
  <con:entry key="headerRq" value="rqUID=7823;channelID=43;clientID=12;clientName=Nombre;sucursalID=suc1;sucursalName=NombreSucursal"/>
  <con:entry key="serviceID" value="V01"/>
  <con:entry key="userID" value="por07885"/>
</con:parameters><con:parameterOrder><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>userID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-35_Groovy" id="03576c74-909c-4e09-beba-34cef5a6d77f"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(29);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-35 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosFinancierosId",d[0])
               	 myTestCase.setPropertyValue("solicitudId",d[1])
               	 myTestCase.setPropertyValue("origenFondos",d[2])
               	 myTestCase.setPropertyValue("ingresosLaboralesMes",d[3])
               	 myTestCase.setPropertyValue("indicadorOtrosIngresos",d[4])
               	 myTestCase.setPropertyValue("otrosIngresosMes",d[5])
               	 myTestCase.setPropertyValue("descripcionOtrosingresos",d[6])
               	 myTestCase.setPropertyValue("totalEgresosMes",d[7])
               	 myTestCase.setPropertyValue("totalActivos",d[8])
               	 myTestCase.setPropertyValue("totalPasivos",d[9])
               	 myTestCase.setPropertyValue("indicadorDeclaracionRenta",d[10])
               	 myTestCase.setPropertyValue("anioDeclaracionRenta",d[11])
               	 myTestCase.setPropertyValue("anioIngresosNoDeclarante",d[12])
               	 myTestCase.setPropertyValue("ingresosNoDeclarante",d[13])
               	 myTestCase.setPropertyValue("anioPatrimonioBrutoNoDeclarante",d[14])
               	 myTestCase.setPropertyValue("ingresosPatrimonioBrutoNoDeclarante",d[15])
               	 myTestCase.setPropertyValue("anioRetefuenteNoDeclarante",d[16])
               	 myTestCase.setPropertyValue("ingresosRetefuenteNoDeclarante",d[17])
               	 myTestCase.setPropertyValue("anioNoDeclarante",d[18])
               	 myTestCase.setPropertyValue("indicadorMonedaExtrangera",d[19])
               	 myTestCase.setPropertyValue("tipoOperacionMoneda",d[20])
               	 myTestCase.setPropertyValue("tipoProductoMoneda",d[21])
               	 myTestCase.setPropertyValue("entidadMoneda",d[22])
               	 myTestCase.setPropertyValue("numeroProductoMoneda",d[23])
               	 myTestCase.setPropertyValue("montoMoneda",d[24])
               	 myTestCase.setPropertyValue("paisMoneda",d[25])
               	 myTestCase.setPropertyValue("ciudadMoneda",d[26])
               	 myTestCase.setPropertyValue("tipoMoneda",d[27])
               	 myTestCase.setPropertyValue("estado",d[28])               	 

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-35")

               	 def xmlString =
				 '{"datosFinancierosId": '+d[0]+','+"\n"+
               	 '"solicitudId": '+d[1]+','+"\n"+
               	 '"origenFondos": "'+d[2]+'",'+"\n"+
               	 '"ingresosLaboralesMes": '+d[3]+','+"\n"+
               	 '"indicadorOtrosIngresos": "'+d[4]+'",'+"\n"+
               	 '"otrosIngresosMes": '+d[5]+','+"\n"+
               	 '"descripcionOtrosingresos": "'+d[6]+'",'+"\n"+
               	 '"totalEgresosMes": '+d[7]+','+"\n"+
               	 '"totalActivos": '+d[8]+','+"\n"+
               	 '"totalPasivos": '+d[9]+','+"\n"+
               	 '"indicadorDeclaracionRenta": "'+d[10]+'",'+"\n"+
               	 '"anioDeclaracionRenta": '+d[11]+','+"\n"+
               	 '"anioIngresosNoDeclarante": '+d[12]+','+"\n"+
               	 '"ingresosNoDeclarante": '+d[13]+','+"\n"+
               	 '"anioPatrimonioBrutoNoDeclarante": '+d[14]+','+"\n"+
               	 '"ingresosPatrimonioBrutoNoDeclarante": '+d[15]+','+"\n"+
               	 '"anioRetefuenteNoDeclarante": '+d[16]+','+"\n"+
               	 '"ingresosRetefuenteNoDeclarante": '+d[17]+','+"\n"+
               	 '"anioNoDeclarante": "'+d[18]+'",'+"\n"+
               	 '"indicadorMonedaExtrangera": "'+d[19]+'",'+"\n"+
               	 '"tipoOperacionMoneda": "'+d[20]+'",'+"\n"+
               	 '"tipoProductoMoneda": "'+d[21]+'",'+"\n"+
               	 '"entidadMoneda": "'+d[22]+'",'+"\n"+
               	 '"numeroProductoMoneda": '+d[23]+','+"\n"+
               	 '"montoMoneda": '+d[24]+','+"\n"+
               	 '"paisMoneda": "'+d[25]+'",'+"\n"+
               	 '"ciudadMoneda": "'+d[26]+'",'+"\n"+
               	 '"tipoMoneda": "'+d[27]+'",'+"\n"+
               	 '"estado": "'+d[28]+'"'+"\n"+             	                 	                	
               	 '}'

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-35#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-35"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-35#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-35"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	 	log.info "Request: "+xmlString+ "\n";
               	 	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-36" id="98f24ca0-9443-4183-a65e-240e4cbf0a9e"><con:settings/><con:config service="DT-SER-36" resourcePath="/wsConsultarDatosFinancierosProspectoIdSolicitud/v1/ConsultarDatosPorId" methodName="ConsultarDatosPorId 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-36" id="6d9c2c45-1dda-469e-a947-f2ef13cc330d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.restgeneral.esb.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.restgeneral.esb.porvenir.com/wsConsultarDatosFinancierosProspectoIdSolicitud/v1/ConsultarDatosPorId</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceTransaction" value="AAF04S11V01"/>
  <con:entry key="solicitudId" value="${#TestCase#solicitudId}"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="test"/>
</con:parameters><con:parameterOrder><con:entry>solicitudId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-36_Groovy" id="2aad119a-e4b5-4e09-a697-b74d98aa4772"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(30);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-36 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("solicitudId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-36")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'solicitudId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-36#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-36"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-36#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-36"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:testStep type="restrequest" name="DT-SER-37" id="3a3014e3-12a0-4350-a3ea-3822acaa0b40"><con:settings/><con:config service="DT-SER-37" resourcePath="/wsConsultarDatosFinancierosProspectoPorLlave/v1/ConsultarDatosPorLlave" methodName="ConsultarDatosPorLlave 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DT-SER-37" id="82c0cc2b-4477-44f1-b776-42993853dd5f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://prb.obligatorias.centrodeservicios.porvenir.com</con:endpoint><con:request/><con:originalUri>https://prb.obligatorias.centrodeservicios.porvenir.com/wsConsultarDatosFinancierosProspectoPorLlave/v1/ConsultarDatosPorLlave</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="datosFinancierosId" value="${#TestCase#datosFinancierosId}"/>
  <con:entry key="serviceTransaction" value="AAF04S11V01"/>
  <con:entry key="headerRq" value="test"/>
  <con:entry key="serviceID" value="AAF04S11V01"/>
</con:parameters><con:parameterOrder><con:entry>datosFinancierosId</con:entry><con:entry>headerRq</con:entry><con:entry>serviceID</con:entry><con:entry>serviceTransaction</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="DT-SER-37_Groovy" id="f7143f8e-75f3-4ff4-879e-18bac09325f0"><con:settings/><con:config><script>import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.ss.util.*;
import java.io.*;
import com.eviware.soapui.support.GroovyUtils;
import groovy.util.XmlParser;
import groovy.util.XmlSlurper;
import groovy.json.JsonSlurper;



  // Clase de ExcelReader que contiene una funcion "readData", para leer datos del archivo Excel "--".

  class ExcelReader{

  	def readData(){

  		// Ruta del excel

  		def path = "C:\\Datos\\Datos_Entrada_Ecommerce.xlsx";
  		InputStream inputStream = new FileInputStream(path);
  		Workbook workbook = WorkbookFactory.create(inputStream);
  		Sheet sheet = workbook.getSheetAt(31);

  		// Carga los datos de tipo String del Excel

  		Iterator rowIterator = sheet.rowIterator();
  		rowIterator.next()
  		Row row;

  		def rowsData = []

  		while(rowIterator.hasNext()){

  			row = rowIterator.next()
  			def rowIndex = row.getRowNum()
  			def colIndex;
  			def rowData = []

  			for(Cell cell : row){
  				colIndex = cell.getColumnIndex()
  				rowData[colIndex] = cell.getRichStringCellValue().getString();
  				
  			}

  			rowsData &lt;&lt; rowData
  		}

  		rowsData
  	}
  }

  		def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
  		def myTestCase = context.testCase

  		ExcelReader  excelReader =  new ExcelReader();
  		
  		List rows = excelReader.readData();
  		def d = []
    		Date date = new Date()
     	def newDate = date.format("YYYY-MM-dd-HH-mm-ss.SSS")               	 
     	def subdir = new File('C:\\Datos\\LOG')
     	subdir.mkdir();
  		Iterator i = rows.iterator();
 		// create a new file
  		FileOutputStream out = new FileOutputStream("C:\\Datos\\LOG\\DT-SER-37 - "+newDate+".xlsx");
  		// create a new workbook
  		Workbook wb = new XSSFWorkbook(); 
		// Pinta los datos en el archivo Excel
		/*rownum++
		Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  */
		Sheet s = wb.createSheet(name = "Ejecución"+newDate);

		XSSFCellStyle my_style = wb.createCellStyle();
		XSSFFont my_font = wb.createFont();
		my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
		my_style.setFont(my_font);
		int rownum = 0
          int rownum1 = 1		
		int rownum2 = 1
		int rownum3 = 2
		Row r = s.createRow(rownum1)                                          
		Cell c0 = r.createCell(0);
		c0.setCellValue("# Ejecución");
		c0.setCellStyle(my_style);
		
		Cell c1 = r.createCell(1);
		c1.setCellValue(" Request: ");
		c1.setCellStyle(my_style);

		//Row r1 = s.createRow(rownum1)
		Cell c2 = r.createCell(2);
		c2.setCellValue(" Response: ");
		c2.setCellStyle(my_style);

		//Row r9 = s.createRow(rownum1)
		Cell c4 = r.createCell(3);
		c4.setCellValue(" Resultado:");
		c4.setCellStyle(my_style);

		Cell c5 = r.createCell(4);
		c5.setCellValue(" Tiempo respuesta m/s:");
		c5.setCellStyle(my_style);
		
               while(i.hasNext()){
               	 d = i.next();
               	 myTestCase.setPropertyValue("datosFinancierosId",d[0])

               	 // runTestStepByName se utiliza para ejecutar el caso de prueba "REST Request".

               	 testRunner.runTestStepByName("DT-SER-37")

               	 def xmlString =
				 'Cabecera:'+"\n"+
               	 'Name '+'  Value '+"\n"+
               	 'datosFinancierosId: '+d[0]+' '+"\n"               	 

               	 try{

                     //Muestra el Response de la ejecución. 
               	 def res = context.expand('${DT-SER-37#Response}');
               	 def TimeResponse = testRunner.testCase.testSteps ["DT-SER-37"]. testRequest.response.timeTaken;
                     //def parsedJson = new groovy.json.JsonSlurper().parseText(res)
                     //def pr = parsedJson.status.statusCode;                                         
                     //log.info pr
               	 // Valida si el caso es exitoso o fallido.
               	 // Operators != , &lt;= , >=               	                	
               	 if(res == '[]' || res == 'Bad Request' || res == 'Not Found' || res == 'Request failed.'
               	 || res == '' || res == 'No existe la cabecera headerRQ'){

               	 	result = 'Fallido'
               	 }else{

               	 	result = 'Exitoso'
               	 }
                     // Pinta los datos en el archivo Excel
                     /*rownum++
                     Sheet s = wb.createSheet(name = "Ejecución_"+rownum);  

                     XSSFCellStyle my_style = wb.createCellStyle();
                     XSSFFont my_font = wb.createFont();
                     my_font.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);
                     my_style.setFont(my_font);*/         
				rownum1++;
				rownum++;	
				Row r11 = s.createRow(rownum1);
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue(result);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse);

                     log.info "Request: "+xmlString+ "\n";
               	 log.info "Response: "+res+ "\n";
               	 log.info "Resultado:"+result+"\n";

               	 }
               	 catch(Exception expObj)
               	 {
               	 	//  Exception Handler
               	def res1 = context.expand('${DT-SER-37#Response}');
               	def TimeResponse1 = testRunner.testCase.testSteps ["DT-SER-37"]. testRequest.response.timeTaken;
                    	
				Row r11 = s.createRow(rownum1)
      			Cell c22 = r11.createCell(0);
      			c22.setCellValue(rownum);
				
      			//Row r11 = s.createRow(rownum1)
      			Cell c23 = r11.createCell(1);
      			c23.setCellValue(xmlString);
                 			
      			//rownum1++
      			//Row r2 = s.createRow(rownum1)
      			Cell c3 = r11.createCell(2);
      			c3.setCellValue(res1);
      			//s.autoSizeColumn(1);
								
      			//Row r5 = s.createRow(rownum1)
      			Cell c6 = r11.createCell(3);
      			c6.setCellValue("Error:" + expObj);

      			Cell c7 = r11.createCell(4);
      			c7.setCellValue(TimeResponse1);
               	 	
               	log.info "Request: "+xmlString+ "\n";
               	log.info "Resultado:"+expObj+"Error 01: Se presentó fallo en el servicio "+"\n";
               	 }               	 
               }
               wb.write(out);
               out.close();</script></con:config></con:testStep><con:properties><con:property><con:name>tipoDocumento</con:name><con:value>CC</con:value></con:property><con:property><con:name>documento</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>codigoPlan</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>numeroDocumento</con:name><con:value>8669714</con:value></con:property><con:property><con:name>pTipoDocumento</con:name><con:value>CC</con:value></con:property><con:property><con:name>pNumeroDocumento</con:name><con:value>8669714</con:value></con:property><con:property><con:name>solicitudId</con:name><con:value>145</con:value></con:property><con:property><con:name>usuario</con:name><con:value>PRUEBA 150</con:value></con:property><con:property><con:name>password</con:name><con:value>passwd14</con:value></con:property><con:property><con:name>tipoIdSolicitante</con:name><con:value>CC</con:value></con:property><con:property><con:name>numeroIdSolicitante</con:name><con:value>1014267275</con:value></con:property><con:property><con:name>fechaSolicitud</con:name><con:value>2019-07-02</con:value></con:property><con:property><con:name>estadoSolicitud</con:name><con:value>ACTIVO</con:value></con:property><con:property><con:name>esPep</con:name><con:value>S</con:value></con:property><con:property><con:name>habeasData</con:name><con:value>S</con:value></con:property><con:property><con:name>autorizaCentrales</con:name><con:value>S</con:value></con:property><con:property><con:name>tipoVinculacionId</con:name><con:value>VINCULACION INICIAL</con:value></con:property><con:property><con:name>estado</con:name><con:value>ACTIVO</con:value></con:property><con:property><con:name>codigoCiudadExpDoc</con:name><con:value>11002</con:value></con:property><con:property><con:name>fechaExpDoc</con:name><con:value>19890503</con:value></con:property><con:property><con:name>fechaNacimiento</con:name><con:value>19710623</con:value></con:property><con:property><con:name>genero</con:name><con:value>F</con:value></con:property><con:property><con:name>primerApellido</con:name><con:value>Anchía</con:value></con:property><con:property><con:name>segundoApellido</con:name><con:value>Victores</con:value></con:property><con:property><con:name>primerNombre</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Nahuel</con:value></con:property><con:property><con:name>segundoNombre</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Ferran</con:value></con:property><con:property><con:name>datosBasicosId</con:name><con:value>259</con:value></con:property><con:property><con:name>tipoIdBeneficiario</con:name><con:value>1</con:value></con:property><con:property><con:name>idBeneficiario</con:name><con:value>1019094964</con:value></con:property><con:property><con:name>codigoParentesco</con:name><con:value>A</con:value></con:property><con:property><con:name>telefono</con:name><con:value>1234567</con:value></con:property><con:property><con:name>beneficiarioId</con:name><con:value>161</con:value></con:property><con:property><con:name>sucursalId</con:name><con:value>1234568039</con:value></con:property><con:property><con:name>tipoIdEmpleador</con:name><con:value>NI</con:value></con:property><con:property><con:name>idEmpleador</con:name><con:value>802654945</con:value></con:property><con:property><con:name>razonSocial</con:name><con:value>SUMAZARI S.A</con:value></con:property><con:property><con:name>codigoCiudadEmpleador</con:name><con:value>11001</con:value></con:property><con:property><con:name>correoElectronicoEmpleador</con:name><con:value>prueba123@gmail.com</con:value></con:property><con:property><con:name>direccionEmpleador</con:name><con:value>CalleFalsa 150</con:value></con:property><con:property><con:name>ocupacionCargoActual</con:name><con:value>Oficiales de Máquinas</con:value></con:property><con:property><con:name>tipoTrabajador</con:name><con:value>ABC147</con:value></con:property><con:property><con:name>salario</con:name><con:value>100000000</con:value></con:property><con:property><con:name>datosLaboralesId</con:name><con:value>15</con:value></con:property><con:property><con:name>codigoCiiu</con:name><con:value>060</con:value></con:property><con:property><con:name>esReconocidoPub</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">N</con:value></con:property><con:property><con:name>manejaFondosPub</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">S</con:value></con:property><con:property><con:name>datosPepsId</con:name><con:value>166</con:value></con:property><con:property><con:name>codCiudadResidencia</con:name><con:value>11001</con:value></con:property><con:property><con:name>direccionResidencia</con:name><con:value>Crr 1 # 1a 1</con:value></con:property><con:property><con:name>telefonoCelular</con:name><con:value>3002456548</con:value></con:property><con:property><con:name>telefonoResidencia</con:name><con:value>7896542</con:value></con:property><con:property><con:name>correoElectronico</con:name><con:value>datoslaborales@prueba.com</con:value></con:property><con:property><con:name>localizacionId</con:name><con:value>94</con:value></con:property><con:property><con:name>origenFondos</con:name><con:value>Banco</con:value></con:property><con:property><con:name>ingresosLaboralesMes</con:name><con:value>500000</con:value></con:property><con:property><con:name>indicadorOtrosIngresos</con:name><con:value>N</con:value></con:property><con:property><con:name>otrosIngresosMes</con:name><con:value>0</con:value></con:property><con:property><con:name>descripcionOtrosingresos</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>totalEgresosMes</con:name><con:value>250000</con:value></con:property><con:property><con:name>totalActivos</con:name><con:value>2000000</con:value></con:property><con:property><con:name>totalPasivos</con:name><con:value>0</con:value></con:property><con:property><con:name>indicadorDeclaracionRenta</con:name><con:value>N</con:value></con:property><con:property><con:name>anioDeclaracionRenta</con:name><con:value>0</con:value></con:property><con:property><con:name>anioIngresosNoDeclarante</con:name><con:value>0</con:value></con:property><con:property><con:name>ingresosNoDeclarante</con:name><con:value>0</con:value></con:property><con:property><con:name>anioPatrimonioBrutoNoDeclarante</con:name><con:value>0</con:value></con:property><con:property><con:name>ingresosPatrimonioBrutoNoDeclarante</con:name><con:value>0</con:value></con:property><con:property><con:name>anioRetefuenteNoDeclarante</con:name><con:value>0</con:value></con:property><con:property><con:name>ingresosRetefuenteNoDeclarante</con:name><con:value>0</con:value></con:property><con:property><con:name>anioNoDeclarante</con:name><con:value>0</con:value></con:property><con:property><con:name>indicadorMonedaExtrangera</con:name><con:value>N</con:value></con:property><con:property><con:name>tipoOperacionMoneda</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tipoProductoMoneda</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>entidadMoneda</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>numeroProductoMoneda</con:name><con:value>0</con:value></con:property><con:property><con:name>montoMoneda</con:name><con:value>0</con:value></con:property><con:property><con:name>paisMoneda</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ciudadMoneda</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tipoMoneda</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>datosFinancierosId</con:name><con:value>5</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:tags/></con:soapui-project>